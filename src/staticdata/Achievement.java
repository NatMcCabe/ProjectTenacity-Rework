package staticdata;

import dynamicdata.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.stream.Collectors;

public enum Achievement {
	/*This lists not only achievements, but all non-repeatables.
	TODO: put list in topological order of requirements (all achievements are listed after their prerequisites.)*/
	AVOIDING_CONFLICT("A-Voiding Conflict", 0.05, Collections.singletonList(new Requirement("Combat", 35)), true),
	A_CAT_IS_FOR_LIFE("A Cat is for Life...", 0, Arrays.asList(new Requirement("Plague City", 1), new Requirement("Gertrude's Cat", 1),
			new Requirement("Cat", 1)), true),
	A_GAME_OF_TOMBS_I("A Game of Tombs I", 0, Collections.singletonList(new Requirement("Shifting Tombs", 1)), true),
	A_GAME_OF_TOMBS_II("A Game of Tombs II", 0, Collections.singletonList(new Requirement("Shifting Tombs", 10)), true),
	A_GAME_OF_TOMBS_III("A Game of Tombs III", 0, Collections.singletonList(new Requirement("Shifting Tombs", 50)), true),
	A_GAME_OF_TOMBS_IV("A Game of Tombs IV", 0, Collections.singletonList(new Requirement("Shifting Tombs", 100)), true),
	A_GAME_OF_TOMBS_V("A Game of Tombs V", 0, Collections.singletonList(new Requirement("Shifting Tombs", 200)), true),
	A_GIFT_FROM_KHAZARD("A Gift From Khazard", 0, new ArrayList<>(), true),
	A_WIZARD_DID_IT("A Wizard Did It", 0, new ArrayList<>(), true),
	A_WORLD_IN_MICROCOSM("A World In Microcosm", 0, new ArrayList<>(), true),
	ABYSSAL_REACH("Abyssal Reach", 0.25, Collections.singletonList(new Requirement("Rune Mysteries", 1)), new ArrayList<>(),
			Collections.singletonList(new Reward("Runecrafting", 1000)), new ArrayList<>(), true),
	ABYSSAL_VALET("Abyssal Valet", 0, Arrays.asList(new Requirement("Abyssal titan pouch", 1), new Requirement("Summoning", 93),
			new Requirement("Pure essense", 2)), new ArrayList<>(), Collections.singletonList(new Reward("Summoning", 2)),
			new ArrayList<>(), true),
	ADVANCED_SWEEPING("Advanced Sweeping", 0, Collections.singletonList(new Requirement("Broomstick enchantments", 5)), true),
	ADVENTURERS_LOG("Adventurer's Log", 0, new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Reward("Logs", 1),
			new Reward("Woodcutting", 25)), new ArrayList<>(), true),
	AERECKS_OLD_BONES("Aereck's Old Bones", 0, Collections.singletonList(new Requirement("The Restless Ghost", 1)), true),
	AGILE_FROM_HEAD_TO_TOE("Agile from Head to Toe", 0, Arrays.asList(new Requirement("Agile top", 1), new Requirement("Agile legs", 1)), true),
	AGILITY_DOJO_MOJO("Agility - Dojo Mojo", 0, Collections.singletonList(new Requirement("Dojo Mojo", 1)), true),
	AGILITY_5("Agility 5", 0, Collections.singletonList(new Requirement("Agility", 5)), true),
	AGILITY_10("Agility 10", 0, Collections.singletonList(new Requirement("Agility", 10)), true),
	AGILITY_20("Agility 20", 0, Collections.singletonList(new Requirement("Agility", 20)), true),
	AGILITY_30("Agility 30", 0, Collections.singletonList(new Requirement("Agility", 30)), true),
	AGILITY_40("Agility 40", 0, Collections.singletonList(new Requirement("Agility", 40)), true),
	AGILITY_50("Agility 50", 0, Collections.singletonList(new Requirement("Agility", 50)), true),
	AGILITY_60("Agility 60", 0, Collections.singletonList(new Requirement("Agility", 60)), true),
	AGILITY_70("Agility 70", 0, Collections.singletonList(new Requirement("Agility", 70)), true),
	AGILITY_80("Agility 80", 0, Collections.singletonList(new Requirement("Agility", 80)), true),
	AGILITY_90("Agility 90", 0, Collections.singletonList(new Requirement("Agility", 90)), true),
	AGILITY_92("Agility 92", 0, Collections.singletonList(new Requirement("Agility", 92)), true),
	AGILITY_99("Agility 99", 0, Collections.singletonList(new Requirement("Agility", 99)), true),
	AHRIM_BOBBLEHEAD("Ahrim Bobblehead", 0, Collections.singletonList(new Requirement("Ahrim the Bobbled", 1)), true),
	AL_KHARID("Al Kharid", 0, new ArrayList<>(), true),
	ALI_THE_TRADER("Ali The Trader", 0, Collections.singletonList(new Requirement("Rogue Trader parts", 3)), true),
	ALL_ABOARD("All Aboard", 0, Collections.singletonList(new Requirement("Ranged", 70)), Collections.singletonList(new Encounter(
	        Collections.singletonList(Collections.singletonList(Enemy.KREEARRA)), new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
	ALL_RISE("All Rise", 0, Collections.singletonList(new Requirement("Court Cases", 16)), true),
	ALL_TOGETHER_NOW("All Together Now", 0, Collections.singletonList(new Requirement("Beastmaster Durzag", 1)), Collections.singletonList(new Encounter(
			Arrays.asList(Collections.singletonList(Enemy.YAKAMARU), Arrays.asList(Enemy.IMAGE_OF_YAKAMARU, Enemy.IMAGE_OF_YAKAMARU, Enemy.IMAGE_OF_YAKAMARU, Enemy.IMAGE_OF_YAKAMARU)),
            new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
	ALMOST_MADE_IN_ARDOUGNE("Almost Made In Ardougne", 0, Arrays.asList(new Requirement("Yew logs", 1), new Requirement("Raw beef", 1),
			new Requirement("Rune bar", 1), new Requirement("Smithing", 91), new Requirement("Fletching", 69),
			new Requirement("Crafting", 10)), new ArrayList<>(), Arrays.asList(new Reward("Rune crossbow", 1),
			new Reward("Cooking", 3), new Reward("Fletching", 100), new Reward("Smithing", 75),
			new Reward("Crafting", 15)), new ArrayList<>(), true),
	ALMOST_AS_PERKY_AS_A_PRAWN("Almost as Perky as a Prawn", 0, Collections.singletonList(new Requirement("Prawn perk", 15)), true),
	ALONG_CAME_A_SPIDER_I("Along Came A Spider I", 0, Collections.singletonList(new Requirement("Araxxi", 5)), true),
	ALONG_CAME_A_SPIDER_II("Along Came A Spider II", 0, Collections.singletonList(new Requirement("Araxxi", 10)), true),
	ALONG_CAME_A_SPIDER_III("Along Came A Spider III", 0, Collections.singletonList(new Requirement("Araxxi", 25)), true),
	ALONG_CAME_A_SPIDER_IV("Along Came A Spider IV", 0, Collections.singletonList(new Requirement("Araxxi", 50)), true),
	ALONG_CAME_A_SPIDER_V("Along Came A Spider V", 0, Collections.singletonList(new Requirement("Araxxi", 75)), true),
	ALONG_CAME_A_SPIDER_VI("Along Came A Spider VI", 0, Collections.singletonList(new Requirement("Araxxi", 100)), true),
	ALTAR_EXPLORER("Altar Explorer", 0.3, Collections.singletonList(new Requirement("Runecrafting", 50)), true),
	ANGS_OFF_MY_RING("Angs off my Ring", 0, Collections.singletonList(new Requirement("Ancient elven wedding ring", 1)), true),
	ANIMAL_CRUELTY("Animal Cruelty", 0, new ArrayList<>(), Collections.singletonList(new Encounter(Arrays.asList(Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER,
			Enemy.CHARGER), Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER), Arrays.asList(Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER, Enemy.CHARGER),
            Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER),
            Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER, Enemy.CORMES),
            Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT),
            Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT),
            Arrays.asList(Enemy.TUZ, Enemy.KRAR, Enemy.BEASTMASTER_DURZAG)), new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
	ANNIHILATOR("Annihilator", 0, Collections.singletonList(new Requirement("Fate of the Gods", 1)), Collections.singletonList(
			new Encounter(Collections.singletonList(Arrays.asList(Enemy.SMOKE_NIHIL, Enemy.SHADOW_NIHIL, Enemy.BLOOD_NIHIL, Enemy.ICE_NIHIL)),
                    new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
	ANY_ODD_CHICKEN("Any Odd Chicken", 0, Collections.singletonList(new Requirement("Ernest the Chicken", 1)), true),
	APE_AHOLLOW("Ape A'hollow", 0.05, Arrays.asList(new Requirement("Fairy Tale Part III", 1), new Requirement("Monkey Madness", 1),
			new Requirement("Agility", 48)), true),
	ARC_ALL_YOUR_ENERGIES("Arc - All Your Energies", 0, Arrays.asList(new Requirement("Chimes", 5000), new Requirement("Tajitu", 5),
			new Requirement("Impressing the Locals", 1)), true),
	ARC_ANCIENT_EASTERN_TORTLE_PORTALS("Arc - Ancient Eastern Tortle Portals", 0.05, Arrays.asList(new Requirement("Divination", 90),
			new Requirement("Ancestral energy", 100), new Requirement("Impressing the Locals", 1)), true),
	ARC_BONE_TO_PICK_WITH_YOU("Arc - Bone to Pick with You", 0, Arrays.asList(new Requirement("Chimes", 25000), new Requirement("Tajitu", 25),
			new Requirement("Impressing the Locals", 1), new Requirement("Bonecrusher", 1)), true),
	ARC_DONT_CRUSH_MY_MEMORIES("Arc - Don't Crush My Memories", 0, Arrays.asList(new Requirement("Chimes", 5000), new Requirement("Tajitu", 5),
			new Requirement("Impressing the Locals", 1)), true),
	ARC_FLIPPERS("Arc - Flippers", 0, Arrays.asList(new Requirement("Impressing the Locals", 1), new Requirement("Raw tarpon", 1)), true),
	ARC_MITTS_AND_WADERS_DEATH_LOTUS("Arc - Mitts and Waders - Death Lotus", 0, Arrays.asList(new Requirement("Chimes", 5000), new Requirement("Tajitu", 6),
			new Requirement("Impressing the Locals", 1)), true),
	ARC_MITTS_AND_WADERS_SEASINGER("Arc - Mitts and Waders - Seasinger", 0, Arrays.asList(new Requirement("Chimes", 5000), new Requirement("Tajitu", 6),
			new Requirement("Impressing the Locals", 1)), true),
	ARC_MITTS_AND_WADERS_TETSU("Arc - Mitts and Waders - Tetsu", 0, Arrays.asList(new Requirement("Chimes", 5000), new Requirement("Tajitu", 6),
			new Requirement("Impressing the Locals", 1)), true),
	BERRIES_OF_THE_ARC("Berries of the Arc", 0, Collections.singletonList(new Requirement("Arc berries", 16)), new ArrayList<>(),
			Collections.singletonList(new Reward("Farming", 50000)), new ArrayList<>(), true),
	BIRDS_OF_THE_ARC("Birds of the Arc", 0, Collections.singletonList(new Requirement("Arc birds", 16)), true),
	ARC_REWARDS("Arc - Rewards", 0, Arrays.asList(new Requirement("Impressing the Locals", 1), new Requirement("Birds of the Arc", 1),
			new Requirement("Berries of the Arc", 1), new Requirement("Kami", 16)), new ArrayList<>(),
			Collections.singletonList(new Reward("Hunter", 50000)), new ArrayList<>(), true),
	ARC_UNLOCKING_MORE_WAIKO("Arc - Unlocking More Waiko", 0, Arrays.asList(new Requirement("Sojobo contract guru", 1),
			new Requirement("Ancestral Divination I", 1), new Requirement("Ancestral Divination II", 1),
			new Requirement("Ancestral Conversion", 1), new Requirement("Spirit dragon pet", 1),
			new Requirement("Idol crabletine pet", 1), new Requirement("Gu ronin outfit", 1),
			new Requirement("Death lotus rogue outfit", 1), new Requirement("Seasinger acolyte outfit", 1),
			new Requirement("Hunter outfit", 1), new Requirement("Hanto outfit", 1), new Requirement("Thalassia's Revenge", 1),
			new Requirement("Winds of Waiko", 1), new Requirement("Rage of Hyu-ji", 1)), true),
	ARC_UNLOCKING_WAIKO("Arc - Unlocking Waiko", 0, Arrays.asList(new Requirement("Waiko Grill", 1), new Requirement("Whale's Maw Camp Fire", 1),
			new Requirement("Whale's Maw Deposit Box", 1), new Requirement("Arc journal teletabs", 1),
			new Requirement("Crystal tool siphon blueprint", 1), new Requirement("Impressing the Locals", 1)), true),
	ARC_UPGRADING_ALL_OF_THE_WAIKO("Arc - Upgrading All of the Waiko", 0, Arrays.asList(new Requirement("Commodity sell per day increase", 2),
			new Requirement("Supplies cap increase", 4), new Requirement("Contracts per day increase", 4),
			new Requirement("Supplies cost reduction", 5), new Requirement("Commodity sell price increase", 2),
			new Requirement("Impressing the Locals", 1)), true),
	ARC_UPGRADING_WAIKO("Arc - Upgrading Waiko", 0, Arrays.asList(new Requirement("Commodity sell per day increase", 1),
			new Requirement("Supplies cap increase", 1), new Requirement("Contracts per day increase", 1),
			new Requirement("Supplies cost reduction", 1), new Requirement("Commodity sell price increase", 1),
			new Requirement("Impressing the Locals", 1)), true),
	ARC_SALTY("Arc - Salty", 0, Arrays.asList(new Requirement("Wushanko Isles: The Arc", 1), new Requirement("Arc - Rewards", 1),
			new Requirement("Arc - Unlocking Waiko", 1), new Requirement("Arc - Unlocking More Waiko", 1),
			new Requirement("Arc - Upgrading All of the Waiko", 1), new Requirement("Arc - Ancient Eastern Tortle Portals", 1),
			new Requirement("Arc - Mitts and Waders - Death Lotus", 1), new Requirement("Arc - Mitts and Waders - Tetsu", 1),
			new Requirement("Arc - Mitts and Waders - Seasinger", 1), new Requirement("Arc - Don't Crush My Memories", 1),
			new Requirement("Arc - Bone to Pick with You", 1), new Requirement("Arc - All Your Energies", 1),
			new Requirement("Arc - Flippers", 1)), true),
	ARC_III_SPIRITUAL_ENLIGHTENMENT("Arc III - Spiritual Enlightenment", 0.75, Arrays.asList(new Requirement("Impressing the Locals", 1),
			new Requirement("Meet the Assassin", 1), new Requirement("Slayer", 90), new Requirement("The Path of the Monk", 1),
			new Requirement("The Path of the Elemental", 1), new Requirement("The Path of the Dragon", 1)), new ArrayList<>(),
			Arrays.asList(new Reward("Chimes", 250), new Reward("Tajitu", 3)),
            Collections.singletonList(new Lamp(Collections.singletonList("Slayer"), -3, 1)), true),
	ARC_II_HEAD_OF_THE_FAMILY("Arc II - Head of the Family", 0.75, Arrays.asList(new Requirement("Impressing the Locals", 1),
			new Requirement("Woodcutting", 90), new Requirement("Fishing", 90), new Requirement("Cooking", 91),
			new Requirement("Chimes", 450), new Requirement("Bamboo", 5), new Requirement("Fish oil", 15)),
			Collections.singletonList(new Encounter(Collections.singletonList(Arrays.asList(Enemy.CAPN_EKAHI, Enemy.CYCLOPS_LABOURER, Enemy.CYCLOPS_LABOURER)), new ArrayList<>())),
			Arrays.asList(new Reward("Chimes", 1300), new Reward("Fish oil", 30), new Reward("Bundle of bamboo", 4),
					new Reward("Tajitu", 5)), Collections.singletonList(new Lamp(Collections.singletonList("Agility"), -3, 1)), true),
	ARC_I_FLAG_FALL("Arc I - Flag Fall", 0.5, Collections.singletonList(new Requirement("Impressing the Locals", 1)), new ArrayList<>(),
			Arrays.asList(new Reward("Chimes", 500), new Reward("Tajitu", 2)), new ArrayList<>(), true),
	ARC_IV_JED_HUNTER("Arc IV - Jed Hunter", 0.25, Arrays.asList(new Requirement("Flag Fall", 1), new Requirement("Spiritual Enlightenment", 1),
			new Requirement("Head of the Family", 1), new Requirement("Hunter", 90), new Requirement("Crafting", 91),
			new Requirement("Driftwood", 10), new Requirement("Sea shell", 5), new Requirement("Tortle shell bowl", 2),
			new Requirement("Tajitu", 1), new Requirement("Chimes", 200)), Arrays.asList(new Encounter(Collections.singletonList(
					Collections.singletonList(Enemy.GU_RONIN)), new ArrayList<>()), new Encounter(Collections.singletonList(Collections.singletonList(Enemy.GU_RONIN)),
			new ArrayList<>()), new Encounter(Collections.singletonList(Collections.singletonList(Enemy.GU_RONIN)), new ArrayList<>())),
			Arrays.asList(new Reward("Chimes", 2000), new Reward("Tajitu", 10)),
			Collections.singletonList(new Lamp(Collections.singletonList("Hunter"), -3, 1)), true),
	ARC_V_EYE_FOR_AN_EYE("Arc V - Eye for an Eye", 0.25, Arrays.asList(new Requirement("Jed Hunter", 1), new Requirement("Mining", 90),
			new Requirement("Sea salt", 30)), Collections.singletonList(new Encounter(Arrays.asList(Arrays.asList(Enemy.ZYCLOPS, Enemy.ZYCLOPS),
			Arrays.asList(Enemy.ZYCLOPS, Enemy.ZYCLOPS), Arrays.asList(Enemy.ZYCLOPS, Enemy.ZYCLOPS), Arrays.asList(Enemy.ZYCLOPS, Enemy.ZYCLOPS, Enemy.ZYCLOPS),
			Arrays.asList(Enemy.ZYCLOPS, Enemy.ZYCLOPS, Enemy.ZYCLOPS), Arrays.asList(Enemy.ZYCLOPS, Enemy.ZYCLOPS, Enemy.ZYCLOPS),
			Arrays.asList(Enemy.ZYCLOPS, Enemy.ZYCLOPS, Enemy.ZYCLOPS, Enemy.ZYCLOPS), Arrays.asList(Enemy.ZYCLOPS, Enemy.ZYCLOPS, Enemy.ZYCLOPS, Enemy.ZYCLOPS),
			Arrays.asList(Enemy.ZYCLOPS, Enemy.ZYCLOPS, Enemy.ZYCLOPS, Enemy.ZYCLOPS)), new ArrayList<>())), Arrays.asList(new Reward("Chimes", 250),
			new Reward("Tajitu", 1), new Reward("Alalea sea salt", 25)),
			Collections.singletonList(new Lamp(Collections.singletonList("Prayer"), -3, 1)), true),
	ARC_VI_HARBINGER_OF_DOOM("Arc VI - Harbinger of Doom", 0.25, Collections.singletonList(new Requirement("Eye for an Eye", 1)), new ArrayList<>(),
			Arrays.asList(new Reward("Chimes", 250), new Reward("Tajitu", 2)),
            Collections.singletonList(new Lamp(Collections.singletonList("Construction"), -3, 1)), true),
	ARC_IX_DAMAGE_CONTROL("Arc IX - Damage Control", 0.25, Arrays.asList(new Requirement("Harbinger", 1),
			new Requirement("Chimes", 2500)), new ArrayList<>(), Arrays.asList(new Reward("Chimes", 3000),
			new Reward("Tajitu", 2)), Collections.singletonList(new Lamp(Collections.singletonList("Thieving"), -3, 1)), true),
	ARC_VIII_GHOSTS_FROM_THE_PAST("Arc VIII - Ghosts from the Past", 0.25, Collections.singletonList(new Requirement("Harbinger", 1)),
			new ArrayList<>(), Arrays.asList(new Reward("Chimes", 500), new Reward("Tajitu", 2)),
			Collections.singletonList(new Lamp(Arrays.asList("Agility", "Herblore", "Fishing", "Thieving", "Cooking", "Prayer", "Runecrafting",
					"Slayer", "Construction", "Hunter", "Dungeoneering", "Divination"), -3, 1)), true),
	ARC_VII_TUAI_LETS_OWN("Arc VII - Tuai Let's Own", 0.5, Arrays.asList(new Requirement("Harbinger", 1), new Requirement("Farming", 86),
			new Requirement("Divination", 90), new Requirement("Rumberry", 30), new Requirement("Positive energy", 30),
			new Requirement("Spirit dragon charm", 1)), new ArrayList<>(), Arrays.asList(new Reward("Chimes", 500),
			new Reward("Tajitu", 2), new Reward("Rumberry", 50), new Reward("Ancestral energy", 50)), new ArrayList<>(), true),
	ARC_X_FINAL_DESTINATION("Arc X - Final Destination", 0.25, Arrays.asList(new Requirement("Tuai Let's Own", 1),
			new Requirement("Damage Control", 1), new Requirement("Ghosts from the Past", 1)),
			Collections.singletonList(new Encounter(Arrays.asList(Arrays.asList(Enemy.ZYCLOPS_CANNONEER, Enemy.ZYCLOPS_CANNONEER, Enemy.ZYCLOPS_CANNONEER),
					Arrays.asList(Enemy.ZOMBIE_UI, Enemy.ZOMBIE_UI, Enemy.ZOMBIE_UI, Enemy.ZOMBIE_UI, Enemy.ZOMBIE_UI, Enemy.ZOMBIE_UI),
					Arrays.asList(Enemy.SKELETON_UI, Enemy.SKELETON_UI), Arrays.asList(Enemy.ZYCLOPS_FD, Enemy.ZYCLOPS_FD)), new ArrayList<>())),
			Arrays.asList(new Reward("Chimes", 2000), new Reward("Tajitu", 10)),
			Collections.singletonList(new Lamp(Arrays.asList("Attack", "Constitution", "Defense", "Strength", "Ranged", "Prayer", "Magic", "Summoning"), -4, 1)), true),
	ARDOUGNE("Ardougne", 0, new ArrayList<>(), true),
	ARE_YOU_BEING_SERVED("Are You Being Served?", 0, new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Reward("Are You Being Served?", 1)),
			new ArrayList<>(), true),
	BARGAIN_HUNTER("Bargain Hunter", 0, new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Reward("Bargain Hunter", 1)),
			new ArrayList<>(), true),
	BOOT_CAMP("Boot Camp", 0, Collections.singletonList(new Requirement("Biohazard", 1)), true),
	BREAKING_AND_ENTERING("Breaking and Entering", 0, Collections.singletonList(new Requirement("Thieving", 16)), true),
	ARDOUGNE_SET_TASKS_EASY("Ardougne Set Tasks - Easy", 0, Arrays.asList(new Requirement("The Essence of Magic", 1),
			new Requirement("Yoink!", 1), new Requirement("Silky Smooth", 1), new Requirement("Preaching to the Infected", 1),
			new Requirement("Playing the Waiting Game", 1), new Requirement("Gone Fishing", 1),
			new Requirement("Boot Camp", 1), new Requirement("A Cat is for Life...", 1),
			new Requirement("Creator and Destroyer", 1), new Requirement("Red Revolution", 1),
			new Requirement("Going on a Summer Holiday", 1), new Requirement("Breaking and Entering", 1),
			new Requirement("P-P-P-Pick Up Some Prizes", 1), new Requirement("A Gift from Khazard", 1),
			new Requirement("Party Pooper", 1), new Requirement("Vial Deeds", 1), new Requirement("Star Seeker", 1),
			new Requirement("Dukes of Khazard", 1), new Requirement("Don't Eat the Pointy Bit", 1),
			new Requirement("Bargain Hunter", 1), new Requirement("Are You Being Served?", 1),
			new Requirement("No Time to Lose", 1), new Requirement("They're Long and Pointy", 1)),
			new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Player.ALL_SKILLS, 1000, 25)), true),
	CATCHING_SOME_RAYS("Catching Some Rays", 0.2, Arrays.asList(new Requirement("Fishing", 81), new Requirement("Swamp paste", 200),
			new Requirement("Bucket", 10), new Requirement("Rope", 10)), new ArrayList<>(),
			Arrays.asList(new Reward("Raw manta ray", 1), new Reward("Fishing", 40)), new ArrayList<>(), true),
	ARDOUGNE_SET_TASKS_ELITE("Ardougne Set Tasks - Elite", 0, Arrays.asList(new Requirement("Catching Some Rays", 1),
			new Requirement("Abyssal Valet", 1), new Requirement("You Could Just Knock", 1),
			new Requirement("Honestly, It's Not a Purse", 1), new Requirement("Almost Made in Ardougne", 1)),
			new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Lamp(Player.ALL_SKILLS, 50000, 85), new Lamp(Player.ALL_SKILLS, 50000, 85),
			new Lamp(Player.ALL_SKILLS, 50000, 85), new Lamp(Player.ALL_SKILLS, 50000, 85)), true),
	ARDOUGNE_SET_TASKS_HARD("Ardougne Set Tasks - Hard", 0, Arrays.asList(new Requirement("Brace Yourself", 1),
			new Requirement("Shadow Boxing", 1), new Requirement("Just Like That", 1),
			new Requirement("Nice View", 1), new Requirement("You're the Dirty Rascal", 1),
			new Requirement("Ourania Mania", 1), new Requirement("Not on My Watch", 1),
			new Requirement("It Just Croaked", 1), new Requirement("Get Your Stinking Hands Off Me", 1),
			new Requirement("Vine-detta", 1), new Requirement("Living on a Prayer", 1),
			new Requirement("Who Wants to Watch the Watchtower?", 1), new Requirement("Monkey Business", 1),
			new Requirement("It's My Newt", 1), new Requirement("A Taste of the Exotic", 1),
			new Requirement("Blood Bank Withdrawal", 1), new Requirement("Artillery Strike", 1)),
			new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Player.ALL_SKILLS,28000, 60)), true),
	ARE_YOU_CHICKEN("Are You Chicken?", 0, Arrays.asList(new Requirement("Tower of Life", 1), new Requirement("Raw chicken", 1),
			new Requirement("Raw swordfish", 1)), Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.SWORDCHICK)),
			new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
	ARDOUGNE_SET_TASKS_MEDIUM("Ardougne Set Tasks - Medium", 0, Arrays.asList(new Requirement("A Visit to Charlie", 1),
			new Requirement("I Wonder What This Does", 1), new Requirement("Sandy's Secret Getaway", 1),
			new Requirement("I Know a Shortcut", 1), new Requirement("Volatile Valuables", 1),
			new Requirement("What, a Melon?", 1), new Requirement("Ardougne Express", 1),
			new Requirement("Arriving in Style", 1), new Requirement("By the Bucketload", 1),
			new Requirement("Meeting History, Again", 1), new Requirement("Fearless Fishing", 1),
			new Requirement("Water Logged", 1), new Requirement("Green Fingers", 1), new Requirement("A Natural Thief", 1),
			new Requirement("The Coal Train", 1), new Requirement("Are You Chicken?", 1)),
			new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Player.ALL_SKILLS, 7500, 45)), true),
	ARE_YOU_NEEDING_ACCESS("Are You Needing Access?", 0, Arrays.asList(new Requirement("Do No Evil", 1),
			new Requirement("Agility", 80)), new ArrayList<>(), Collections.singletonList(new Reward("Agility", 20000)),
			new ArrayList<>(), true),
	ARISE_FROM_THE_ASH("Arise from the Ash", 0, Arrays.asList(new Requirement("In Pyre Need", 1), new Requirement("Phoenix Lair", 1)), true),
	AROUND_THE_WORLD_IN_SIX_WAYS("Around the World in Six Ways", 0, Collections.singletonList(new Requirement("Balloon transport system routes", 6)), true),
	AS_TAXED_AS_A_YAK("As Taxed as a Yak", 0, Arrays.asList(new Requirement("The Fremennik Isles", 1), new Requirement("Coins", 5000)), true),
	AS_CLEAR_AS_A_CRYSTAL_SEED("As Clear as a Crystal Seed", 0, Collections.singletonList(new Requirement("Within the Light", 1)), true),
	ASHDALE("Ashdale", 0, new ArrayList<>(), true),
	ATTACK_SIFU("Attack - Sifu", 0, Collections.singletonList(new Requirement("Sifu", 1)), true),
	ATTACK_5("Attack 5", 0, Collections.singletonList(new Requirement("Attack", 5)), true),
	ATTACK_10("Attack 10", 0, Collections.singletonList(new Requirement("Attack", 10)), true),
	ATTACK_20("Attack 20", 0, Collections.singletonList(new Requirement("Attack", 20)), true),
	ATTACK_30("Attack 30", 0, Collections.singletonList(new Requirement("Attack", 30)), true),
	ATTACK_40("Attack 40", 0, Collections.singletonList(new Requirement("Attack", 40)), true),
	ATTACK_50("Attack 50", 0, Collections.singletonList(new Requirement("Attack", 50)), true),
	ATTACK_60("Attack 60", 0, Collections.singletonList(new Requirement("Attack", 60)), true),
	ATTACK_70("Attack 70", 0, Collections.singletonList(new Requirement("Attack", 70)), true),
	ATTACK_80("Attack 80", 0, Collections.singletonList(new Requirement("Attack", 80)), true),
	ATTACK_90("Attack 90", 0, Collections.singletonList(new Requirement("Attack", 90)), true),
	ATTACK_92("Attack 92", 0, Collections.singletonList(new Requirement("Attack", 92)), true),
	ATTACK_99("Attack 99", 0, Collections.singletonList(new Requirement("Attack", 99)), true),
	AVA("Ava", 0, Collections.singletonList(new Requirement("Ava", 1)), true),
	AZACORAXS_REWARDS("Azacorax's Rewards", 0, Arrays.asList(new Requirement("Rune Memories", 1), new Requirement("Magic", 50),
			new Requirement("Prayer", 50)), new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Arrays.asList("Magic", "Prayer"),
			10000, 50)), true),
	AZDARAN_BIRTHRIGHT("Azdaran Birthright", 0, Collections.singletonList(new Requirement("Azdaran fragment", 10)), true),
	BANDIT_CAMP("Bandit Camp", 0, Collections.singletonList(new Requirement("Desert Treasure", 1)), true),
	BANDOSS_MEMORIES("Bandos's Memories", 0, Collections.singletonList(new Requirement("Bandos chronicles", 13)), true),
	BANE_TUNER("Bane Tuner", 0, Collections.singletonList(new Requirement("Tune Bane Ore", 1)), true),
	BANK_Z("Bank-Z", 0, Collections.singletonList(new Requirement("Dimension of Disaster: Curse of Arrav", 1)), new ArrayList<>(),
			Collections.singletonList(new Reward("Zemomark", 30)), new ArrayList<>(), true),
	BANKING_HISTORY("Banking History", 0, Collections.singletonList(new Requirement("Enchanted key miniquest", 2)), true),
	BARBARIAN_SCAVENGER("Barbarian Scavenger", 0, Collections.singletonList(new Requirement("Ancient page", 26)), true),
	BAROO_QUALITY("Baroo Quality", 0, Arrays.asList(new Requirement("Yak-hide armour (top)", 1), new Requirement("Yak-hide armour (legs)", 1),
			new Requirement("Fremennik round shield", 1)), Collections.singletonList(new Encounter(Collections.singletonList(
					Collections.singletonList(Enemy.DAGANNOTH_SUPREME)), Arrays.asList(new Restriction("Yak-hide armour (top)", 1),
			new Restriction("Yak-hide armour (legs)", 1), new Restriction("Fremennik round shield", 1)))),
			new ArrayList<>(), new ArrayList<>(), true),
	BARROWED_POWER_I("Barrowed Power I", 0, Collections.singletonList(new Requirement("Rise of the Six", 5)), true),
	BARROWED_POWER_II("Barrowed Power II", 0, Collections.singletonList(new Requirement("Rise of the Six", 10)), true),
	BARROWED_POWER_III("Barrowed Power III", 0, Collections.singletonList(new Requirement("Rise of the Six", 25)), true),
	BARROWED_POWER_IV("Barrowed Power IV", 0, Collections.singletonList(new Requirement("Rise of the Six", 50)), true),
	BARROWED_POWER_V("Barrowed Power V", 0, Collections.singletonList(new Requirement("Rise of the Six", 75)), true),
	BARROWED_POWER_VI("Barrowed Power VI", 0, Collections.singletonList(new Requirement("Rise of the Six", 100)), true),
	BARROWED_TIME("Barrowed Time", 0, Collections.singletonList(new Requirement("Barrows uniques", 38)), true),
	BARRY("Barry", 0, Collections.singletonList(new Requirement("Barry", 1)), true),
	BEGGARS_CANT_BE_CHOOSERS("Beggars Can't Be Choosers", 0.05, Arrays.asList(new Requirement("In Aid of the Myreque", 1),
			new Requirement("Great maki", 1)), true),
	BEHEMOTH_NOTES("Behemoth Notes", 0, Collections.singletonList(new Requirement("Behemoth notes", 5)), true),
	BEST_OFFENCE("Best Offence", 0, new ArrayList<>(), Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.KALPHITE_KING)),
			new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
	BETTER_NOT_TOUCH("Better Not Touch", 0, Collections.singletonList(new Requirement("Beastmaster Durzag", 1)), Collections.singletonList(new Encounter(
			Arrays.asList(Collections.singletonList(Enemy.YAKAMARU), Collections.singletonList(Enemy.IMAGE_OF_YAKAMARU), Collections.singletonList(Enemy.IMAGE_OF_YAKAMARU),
					Collections.singletonList(Enemy.IMAGE_OF_YAKAMARU), Collections.singletonList(Enemy.IMAGE_OF_YAKAMARU)), new ArrayList<>())), new ArrayList<>(),
			new ArrayList<>(), true),
	BIG_CHINCHOMPA("Big Chinchompa", 0.25, Collections.singletonList(new Requirement("Hunter", 78)), new ArrayList<>(),
			Collections.singletonList(new Reward("Competence points", 1111)), new ArrayList<>(), true),
	BIPEDAL_MASK("Bipedal Mask", 0, Collections.singletonList(new Requirement("Tuska mask", 1)), new ArrayList<>(),
			new ArrayList<>(), Collections.singletonList(new Lamp(Arrays.asList("Attack", "Strength", "Defense", "Constitution", "Ranged", "Magic"), 43680, 90)), true),
	BIRD_IS_THE_WORD_I("Bird is the Word I", 0, Collections.singletonList(new Requirement("Kree'arra", 5)), true),
	BIRD_IS_THE_WORD_II("Bird is the Word II", 0, Collections.singletonList(new Requirement("Kree'arra", 10)), true),
	BIRD_IS_THE_WORD_III("Bird is the Word III", 0, Collections.singletonList(new Requirement("Kree'arra", 25)), true),
	BIRD_IS_THE_WORD_IV("Bird is the Word IV", 0, Collections.singletonList(new Requirement("Kree'arra", 50)), true),
	BIRD_IS_THE_WORD_V("Bird is the Word V", 0, Collections.singletonList(new Requirement("Kree'arra", 75)), true),
	BIRD_IS_THE_WORD_VI("Bird is the Word VI", 0, Collections.singletonList(new Requirement("Kree'arra", 100)), true),
	BIRDSTRIKE_I("Birdstrike I", 0, Collections.singletonList(new Requirement("Kree'arra (HM)", 5)), true),
	BIRDSTRIKE_II("Birdstrike II", 0, Collections.singletonList(new Requirement("Kree'arra (HM)", 10)), true),
	BIRDSTRIKE_III("Birdstrike III", 0, Collections.singletonList(new Requirement("Kree'arra (HM)", 25)), true),
	BIRDSTRIKE_IV("Birdstrike IV", 0, Collections.singletonList(new Requirement("Kree'arra (HM)", 50)), true),
	BIRDSTRIKE_V("Birdstrike V", 0, Collections.singletonList(new Requirement("Kree'arra (HM)", 75)), true),
	BIRDSTRIKE_VI("Birdstrike VI", 0, Collections.singletonList(new Requirement("Kree'arra (HM)", 100)), true),
	BLACKOUT("Blackout", 0, Collections.singletonList(new Requirement("Queen Black Dragon uniques", 12)), true),
	BLINDED_BY_RAMARNOS_TEACHING("Blinded by Ramarno's Teaching", 0, Arrays.asList(new Requirement("Defender of Varrock", 1),
			new Requirement("Redberry pie", 1)), new ArrayList<>(), Collections.singletonList(new Reward("Smithing", 1000)),
			new ArrayList<>(), true),
	BLOOD_STAINED_TREASURE("Blood Stained Treasure", 0.05, Collections.singletonList(new Requirement("Legacy of Seergaze", 1)),
			new ArrayList<>(), Collections.singletonList(new Reward("Blood rune", 100)), new ArrayList<>(), true),
	BOMBI("Bombi", 0, Collections.singletonList(new Requirement("Bombi", 1)), true),
	BONE_I_FIRED("Bone I Fired", 0, Arrays.asList(new Requirement("Zanik's crossbow", 1), new Requirement("Bone bolt", 2),
			new Requirement("Rag and Bone Man wish list", 1), new Requirement("Fur'n'Seek wish list", 1),
			new Requirement("Ranged", 48)), Collections.singletonList(new Encounter(Arrays.asList(Collections.singletonList(Enemy.SKELETAL_HORROR_PHASE_1),
			Collections.singletonList(Enemy.SKELETAL_HORROR_PHASE_2), Collections.singletonList(Enemy.SKELETAL_HORROR_PHASE_3),
			Collections.singletonList(Enemy.SKELETAL_HORROR_PHASE_4)), Arrays.asList(new Restriction("Zanik's crossbow", 1),
			new Restriction("Bone bolt", 1)))), Arrays.asList(new Reward("Slayer", 10000),
			new Reward("Prayer", 7000)), new ArrayList<>(), true),
	BOVINE_INTERVENTION("Bovine Intervention", 0, Collections.singletonList(new Requirement("Cow", 1)), true),
	BOYS_TO_MENAPHITES("Boys to Menaphites", 0, Collections.singletonList(new Requirement("Menaphos reputation", 330000)), true),
	BRASS_NEX_I("Brass Nex I", 0, Collections.singletonList(new Requirement("Nex", 5)), true),
	BRASS_NEX_II("Brass Nex II", 0, Collections.singletonList(new Requirement("Nex", 10)), true),
	BRASS_NEX_III("Brass Nex III", 0, Collections.singletonList(new Requirement("Nex", 25)), true),
	BRASS_NEX_IV("Brass Nex IV", 0, Collections.singletonList(new Requirement("Nex", 50)), true),
	BRASS_NEX_V("Brass Nex V", 0, Collections.singletonList(new Requirement("Nex", 75)), true),
	BRASS_NEX_VI("Brass Nex VI", 0, Collections.singletonList(new Requirement("Nex", 100)), true),
	BRIDGE_OVER_FREMMY_WATERS("Bridge over Fremmy Waters", 0, Collections.singletonList(new Requirement("Unabridged Fremennik sagas", 5)), true),
	BRING_IT_ALL_BACK("Bring It All Back", 0, Arrays.asList(new Requirement("Ranged", 80), new Requirement("Blade of Avaryss", 1),
			new Requirement("Blade of Nymora", 1), new Requirement("Attack", 85)),
			Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.TWIN_FURIES)),
					Arrays.asList(new Restriction("Blade of Avaryss", 1), new Restriction("Blade of Nymora", 1)))),
			new ArrayList<>(), new ArrayList<>(), true),
	BROTHERS_GOWER("Brothers Gower", 0, Collections.singletonList(new Requirement("Gower lamp", 3)), true),
	BROTHERS_IN_ARMS("Brothers in Arms", 0, Arrays.asList(new Requirement("Ritual of the Mahjarrat", 1),
			new Requirement("Kindred Spirits", 1), new Requirement("Ahrim's staff", 1),
			new Requirement("Akrisae's war mace", 1), new Requirement("Dharok's greataxe", 1),
			new Requirement("Guthan's warspear", 1), new Requirement("Karil's crossbow", 1),
			new Requirement("Linza's hammer", 1), new Requirement("Torag's hammer", 1),
			new Requirement("Verac's flail", 1), new Requirement("Magic", 70), new Requirement("Attack", 80),
			new Requirement("Prayer", 70), new Requirement("Strength", 70), new Requirement("Ranged", 70)),
			Arrays.asList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.AHRIM_THE_BLIGHTED)),
							Collections.singletonList(new Restriction("Ahrim's staff", 1))),
					new Encounter(Collections.singletonList(Collections.singletonList(Enemy.DHAROK_THE_WRETCHED)),
							Collections.singletonList(new Restriction("Dharok's greataxe", 1))),
					new Encounter(Collections.singletonList(Collections.singletonList(Enemy.LINZA_THE_DISGRACED)),
							Collections.singletonList(new Restriction("Linza's hammer", 1))),
					new Encounter(Collections.singletonList(Collections.singletonList(Enemy.KARIL_THE_TAINTED)),
							Collections.singletonList(new Restriction("Karil's crossbow", 1))),
					new Encounter(Collections.singletonList(Collections.singletonList(Enemy.TORAG_THE_CORRUPTED)),
							Collections.singletonList(new Restriction("Torag's hammer", 1))),
					new Encounter(Collections.singletonList(Collections.singletonList(Enemy.GUTHAN_THE_INFESTED)),
							Collections.singletonList(new Restriction("Guthan's warspear", 1))),
					new Encounter(Collections.singletonList(Collections.singletonList(Enemy.AKRISAE_THE_DOOMED)),
							Collections.singletonList(new Restriction("Akrisae's war mace", 1))),
					new Encounter(Collections.singletonList(Collections.singletonList(Enemy.VERAC_THE_DEFILED)),
							Collections.singletonList(new Restriction("Verac's flail", 1)))), new ArrayList<>(), new ArrayList<>(), true),
	BROTHERS_IN_MORE_ARMS("Brothers in More Arms", 0, Collections.singletonList(new Requirement("Barrows totem", 6)),
			Arrays.asList(new Encounter(Arrays.asList(Arrays.asList(Enemy.KARIL_THE_TAINTED_ROTS, Enemy.TORAG_THE_CORRUPTED_ROTS,
					Enemy.DHAROK_THE_WRETCHED_ROTS), Arrays.asList(Enemy.GUTHAN_THE_INFESTED_ROTS, Enemy.AHRIM_THE_BLIGHTED_ROTS,
					Enemy.VERAC_THE_DEFILED_ROTS)), new ArrayList<>()), new Encounter(Arrays.asList(Arrays.asList(Enemy.KARIL_THE_TAINTED_ROTS,
					Enemy.TORAG_THE_CORRUPTED_ROTS, Enemy.DHAROK_THE_WRETCHED_ROTS), Arrays.asList(Enemy.GUTHAN_THE_INFESTED_ROTS,
					Enemy.VERAC_THE_DEFILED_ROTS, Enemy.AHRIM_THE_BLIGHTED_ROTS)), new ArrayList<>()), new Encounter(Arrays.asList(Arrays.asList(Enemy.KARIL_THE_TAINTED_ROTS,
					Enemy.TORAG_THE_CORRUPTED_ROTS, Enemy.DHAROK_THE_WRETCHED_ROTS), Arrays.asList(Enemy.AHRIM_THE_BLIGHTED_ROTS,
					Enemy.VERAC_THE_DEFILED_ROTS, Enemy.GUTHAN_THE_INFESTED_ROTS)), new ArrayList<>()), new Encounter(Arrays.asList(Arrays.asList(Enemy.KARIL_THE_TAINTED_ROTS,
					Enemy.TORAG_THE_CORRUPTED_ROTS, Enemy.GUTHAN_THE_INFESTED_ROTS), Arrays.asList(Enemy.AHRIM_THE_BLIGHTED_ROTS,
					Enemy.VERAC_THE_DEFILED_ROTS, Enemy.DHAROK_THE_WRETCHED_ROTS)), new ArrayList<>()), new Encounter(Arrays.asList(Arrays.asList(Enemy.KARIL_THE_TAINTED_ROTS,
					Enemy.DHAROK_THE_WRETCHED_ROTS, Enemy.GUTHAN_THE_INFESTED_ROTS), Arrays.asList(Enemy.AHRIM_THE_BLIGHTED_ROTS,
					Enemy.VERAC_THE_DEFILED_ROTS, Enemy.TORAG_THE_CORRUPTED_ROTS)), new ArrayList<>()), new Encounter(Arrays.asList(Arrays.asList(Enemy.TORAG_THE_CORRUPTED_ROTS,
					Enemy.DHAROK_THE_WRETCHED_ROTS, Enemy.GUTHAN_THE_INFESTED_ROTS), Arrays.asList(Enemy.AHRIM_THE_BLIGHTED_ROTS,
					Enemy.VERAC_THE_DEFILED_ROTS, Enemy.KARIL_THE_TAINTED_ROTS)), new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
	BRUTAL_STUFFIES("Brutal Stuffies", 0, Arrays.asList(new Requirement("Zogre Flesh Eaters", 1), new Requirement("Relicym's balm", 1)), true),
	BUG_SWATTER_I("Bug Swatter I", 0, Collections.singletonList(new Requirement("Kalphite Queen", 5)), true),
	BUG_SWATTER_II("Bug Swatter II", 0, Collections.singletonList(new Requirement("Kalphite Queen", 10)), true),
	BUG_SWATTER_III("Bug Swatter III", 0, Collections.singletonList(new Requirement("Kalphite Queen", 25)), true),
	BUG_SWATTER_IV("Bug Swatter IV", 0, Collections.singletonList(new Requirement("Kalphite Queen", 50)), true),
	BUG_SWATTER_V("Bug Swatter V", 0, Collections.singletonList(new Requirement("Kalphite Queen", 75)), true),
	BUG_SWATTER_VI("Bug Swatter VI", 0, Collections.singletonList(new Requirement("Kalphite Queen", 100)), true),
	BUG_ZAPPER_I("Bug Zapper I", 0, Collections.singletonList(new Requirement("Kalphite King", 5)), true),
	BUG_ZAPPER_II("Bug Zapper II", 0, Collections.singletonList(new Requirement("Kalphite King", 10)), true),
	BUG_ZAPPER_III("Bug Zapper III", 0, Collections.singletonList(new Requirement("Kalphite King", 25)), true),
	BUG_ZAPPER_IV("Bug Zapper IV", 0, Collections.singletonList(new Requirement("Kalphite King", 50)), true),
	BUG_ZAPPER_V("Bug Zapper V", 0, Collections.singletonList(new Requirement("Kalphite King", 75)), true),
	BUG_ZAPPER_VI("Bug Zapper VI", 0, Collections.singletonList(new Requirement("Kalphite King", 100)), true),
	BURN_FURY_BURN("Burn, Fury, Burn", 0, Collections.singletonList(new Requirement("Ranged", 80)),
			Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.TWIN_FURIES)), new ArrayList<>())),
			new ArrayList<>(), new ArrayList<>(), true),
	BURTHORPE("Burthorpe", 0, new ArrayList<>(), true),
	BURTHORPE_TROLLS("Burthorpe Trolls", 0, new ArrayList<>(), true),
	BUSINESS_IS_BOONING("Business Is Booning!", 0, Arrays.asList(new Requirement("Divination", 10), new Requirement("Pale energy", 100)),
			new ArrayList<>(), Collections.singletonList(new Reward("Divination", 3)), new ArrayList<>(), true),
	BUY_AND_SELL_SOME_XP("Buy and Sell Some XP", 0, Arrays.asList(new Requirement("Thieving", 62), new Requirement("Buyers and Cellars", 1)),
			new ArrayList<>(), Collections.singletonList(new Reward("Thieving", 2000)), new ArrayList<>(), true),
	BUYING_UP_ANCIENT_ARTIFACTS("Buying Up Ancient Artifacts", 0, Arrays.asList(new Requirement("Desert Treasure", 1),
			new Requirement("Coins", 80000)), true),
	CANT_MAKE_AN_OMELETTE("Can't Make and Omelette", 0, new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Reward("Red spider eggs", 1)),
			new ArrayList<>(), true),
	CAN_YOU_DIG_IT("Can You Dig It?", 0, Collections.singletonList(new Requirement("Giant Mole uniques", 3)), true),
	CANIFIS("Canifis", 0, new ArrayList<>(), true),
	CAREFUL_THERE_ARE_SNAKES("Careful, There Are Snakes", 0.05, Collections.singletonList(new Requirement("Thieving", 31)), true),
	CASTAWAYS_OF_THE_ARC("Castaways of the Arc", 0, Collections.singletonList(new Requirement("Arc castaways", 10)), true),
	CASTING_A_SHADOW("Casting a Shadow", 0, Arrays.asList(new Requirement("Blissful shadow core", 1), new Requirement("Divination", 81),
			new Requirement("Plague's End", 1)), new ArrayList<>(), Collections.singletonList(new Reward("Divination", 455)),
			new ArrayList<>(), true),
	CASTLES_IN_THE_SKY("Castles in the Sky", 0, new ArrayList<>(), true),
	CATS_BANE("Cat's Bane", 0, Collections.singletonList(new Requirement("New Varrock stray cats", 4)), new ArrayList<>(),
			Collections.singletonList(new Reward("Zemomark", 20)), new ArrayList<>(), true),
	CATHERBY("Catherby", 0, new ArrayList<>(), true),
	CAVING_INTO_THE_GAINS("Caving Into the Gains", 0, Collections.singletonList(new Requirement("Myths of the White Lands post-quest rewards", 4)), true),
	CECELIA_IM_BEGGING_YOU_PLEASE("Cecelia, I'm Begging You, Please...", 0, Collections.singletonList(new Requirement("One Piercing Note", 1)), true),
	CHALLENGE_MARIA("Challenge Maria", 0, Arrays.asList(new Requirement("Broken Home bonus lamps", 9),
			new Requirement("Broken Home replay challenges", 3)), true),
	CHALLENGING_CHAT("Challenging Chat", 0, new ArrayList<>(), true),
	CHAMPIONS_WHAT_CHAMPIONS("Champions? What Champions", 0, Collections.singletonList(new Requirement("Champions", 15)),
			new ArrayList<>(), Collections.singletonList(new Reward("Coins", 50000)), Arrays.asList(new Lamp(Arrays.asList("Attack",
			"Strength", "Magic", "Ranged", "Defense", "Constitution", "Prayer", "Summoning"), 10000, 50), new Lamp(Arrays.asList("Attack",
			"Strength", "Magic", "Ranged", "Defense", "Constitution", "Prayer", "Summoning"), 10000, 50), new Lamp(Arrays.asList("Attack",
			"Strength", "Magic", "Ranged", "Defense", "Constitution", "Prayer", "Summoning"), 10000, 50), new Lamp(Arrays.asList("Attack",
			"Strength", "Magic", "Ranged", "Defense", "Constitution", "Prayer", "Summoning"), 10000, 50)), true),
    CHANGING_OF_THE_GUARD("Changing of the Guard", 0, Arrays.asList(new Requirement("Defense", 60), new Requirement("Black dragonhide coif", 1),
            new Requirement("Black dragonhide body", 1), new Requirement("Black dragonhide chaps", 1),
            new Requirement("Black dragonhide boots", 1), new Requirement("Black dragonhide vambraces", 1),
            new Requirement("Black dragonhide shield", 1)), 
			Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.KING_BLACK_DRAGON)),
					Arrays.asList( new Restriction("Black dragonhide coif", 1), new Restriction("Black dragonhide body", 1),
							new Restriction("Black dragonhide chaps", 1), new Restriction("Black dragonhide boots", 1),
							new Restriction("Black dragonhide vambraces", 1), new Restriction("Black dragonhide shield", 1)))),
            new ArrayList<>(), new ArrayList<>(), true),
    CHAOS_THEORY("Chaos Theory", 0, Collections.singletonList(new Requirement("Chaos Elemental uniques", 30)), true),
    CHECKMATE("Checkmate", 0, Collections.singletonList(new Requirement("Kalphite Queen uniques", 4)), true),
    CHICKARRA("Chick'arra", 0, Collections.singletonList(new Requirement("Chick'arra", 1)), true),
    CHILLING_WITH_ARRAV("Chilling with Arrav", 0, Collections.singletonList(new Requirement("Ritual of the Mahjarrat", 1)),
            new ArrayList<>(), Collections.singletonList(new Reward("Prayer", 3000)), new ArrayList<>(), true),
    CHIPPY_TRANSPORT("Chippy Transport", 0, Collections.singletonList(new Requirement("Love Story", 1)), true),
    CHIVALRY_IS_FED("Chivalry is Fed", 0, Arrays.asList(new Requirement("The Death of Chivalry", 1), new Requirement("Cabbage seeds", 12),
            new Requirement("Farming", 7)), new ArrayList<>(), Collections.singletonList(new Reward("Farming", 250)),
            new ArrayList<>(), true),
    CHIVALRY_IS_THREADS("Chivalry is Threads", 0, Arrays.asList(new Requirement("Templar armour", 1), new Requirement("Dulcin armour", 1)), true),
    CHIVALRY_IS_DEAD("Chivalry is Dead", 0, Collections.singletonList(new Requirement("The Death of Chivalry post-quest rewards", 4)), true),
    CHOMPY_MASSACRE("Chompy Massacre", 0, Collections.singletonList(new Requirement("Chompy kills", 4000)),
            new ArrayList<>(), Collections.singletonList(new Reward("Ranged", 30000)), new ArrayList<>(), true),
    CIRCUS_OF_FIRE("Circus of Fire", 0.05, Collections.singletonList(new Requirement("The Firemaker's Curse", 1)), true),
    CITADELEMENTARY("Citadelementary", 0, new ArrayList<>(), true),
    CLAIMING_AZZANADRAS_HEART("Claiming Azzanadra's Heart", 0, Arrays.asList(new Requirement("Heart of Stone", 1),
            new Requirement("The Temple at Senntisten", 1)), new ArrayList<>(), new ArrayList<>(),
            Collections.singletonList(new Lamp(Player.ALL_SKILLS, -2, 1)), true),
    CLASS_CROWN("Class Crown", 0, Collections.singletonList(new Requirement("Imperial reputation", 300000)), true),
    CLASSIC_DRAGON_KILLING("Classic Dragon Killing", 0, Arrays.asList(new Requirement("Attack", 80), new Requirement("Dragonfire shield", 1)),
            Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.VINDICTA)),
					Collections.singletonList(new Restriction("Dragonfire shield", 1)))), new ArrayList<>(), new ArrayList<>(), true),
    CLASSIC_ROCK("Classic Rock", 0, new ArrayList<>(), Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.VORAGO)),
			Collections.singletonList(new Restriction("Defensive abilities", 0)))), new ArrayList<>(), new ArrayList<>(), true),
    CLAUS_IS_RISING("Claus Is Rising", 0, Collections.singletonList(new Requirement("Claus the chef reward", 1)), true),
    CLAYMATION("Claymation", 0.33, new ArrayList<>(), true),
    CLUES_IN_THE_MONKEY_DROOL("Clue's In The Monkey Drool", 0, Collections.singletonList(new Requirement("Monkey clue scroll", 1)), true),
    COLLECTING_MEMORABILIA("Collecting Memorabilia", 0, new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Reward("Divination", 1)),
            new ArrayList<>(), true),
    COME_AND_HAVE_VORAGO_I("Come and Have Vorago I", 0, Collections.singletonList(new Requirement("Vorago", 5)), true),
    COME_AND_HAVE_VORAGO_II("Come and Have Vorago II", 0, Collections.singletonList(new Requirement("Vorago", 10)), true),
    COME_AND_HAVE_VORAGO_III("Come and Have Vorago III", 0, Collections.singletonList(new Requirement("Vorago", 25)), true),
    COME_AND_HAVE_VORAGO_IV("Come and Have Vorago IV", 0, Collections.singletonList(new Requirement("Vorago", 50)), true),
    COME_AND_HAVE_VORAGO_V("Come and Have Vorago V", 0, Collections.singletonList(new Requirement("Vorago", 75)), true),
    COME_AND_HAVE_VORAGO_VI("Come and Have Vorago VI", 0, Collections.singletonList(new Requirement("Vorago", 100)), true),
    COMMANDER_MINIANA("Commander Miniana", 0, Collections.singletonList(new Requirement("Commander Miniana", 1)), true),
    COMMERCE_BREAK("Commerce Break", 0, new ArrayList<>(), true),
    COMPLETE_HISTORY_OF_DROALAK("Complete History of Droalak", 0, Collections.singletonList(new Requirement("Making History", 1)), true),
    COMPLETE_TREKKY("Complete Trekky", 0, Collections.singletonList(new Requirement("Temple Trekking total level", 594)), true),
    COMPLETIONIST_CAPE("Completionist Cape", 0, Arrays.asList(new Requirement("Abyssal Reach", 1), new Requirement("Almost as Perky as a Prawn", 1),
            new Requirement("Annihilator", 1), new Requirement("Arc - Ancient Eastern Tortle Portals", 1),
            new Requirement("Arc - Unlocking Waiko", 1), new Requirement("Arc - Upgrading Waiko", 1),
            new Requirement("Arc III - Spiritual Enlightenment", 1), new Requirement("Arc II - Head of the Family", 1),
            new Requirement("Arc IV - Jed Hunter", 1), new Requirement("Arc IX - Damage Control", 1),
            new Requirement("Arc I - Flag Fall", 1), new Requirement("Arc VIII - Ghosts from the Past", 1),
            new Requirement("Arc VII - Tuai Leit's Own", 1), new Requirement("Arc VI - Harbinger of Doom", 1),
            new Requirement("Arc V - Eye for an Eye", 1), new Requirement("Arc X - Final Destination", 1),
            new Requirement("Bandos's Memories", 1), new Requirement("Bane Tuner", 1),
            new Requirement("Big Chinchompa", 1), new Requirement("Bipedal Mask", 1),
            new Requirement("Bridge over Fremmy Waters", 1), new Requirement("Claus Is Rising", 1),
            new Requirement("Deadlier Catch", 1), new Requirement("Desert-ed Ghosts", 1),
            new Requirement("Diaries of the Clans", 1), new Requirement("Elven Titles", 1),
            new Requirement("Family Spirit Tree", 1), new Requirement("Famous", 1), new Requirement("Heal, Quickly", 1),
            new Requirement("I'm Forever Washing Shadows", 1), new Requirement("Imping Around", 1),
            new Requirement("Invention Gives Me the Blues", 1), new Requirement("Kharshai's Memories", 1),
            new Requirement("Kiln Fighter", 1), new Requirement("Kudos to You", 1), new Requirement("Long Live the Queen", 1),
            new Requirement("Lost Toys", 1), new Requirement("Lunar Master", 1), new Requirement("Make Them Bleed", 1),
            new Requirement("Master Quester", 1), new Requirement("Master Skiller", 1),
            new Requirement("Memories of Guthis", 1), new Requirement("Music Maestro", 1),
            new Requirement("Myreque in Memoriam", 1), new Requirement("One Foot in the Grave", 1),
            new Requirement("Out into the Ourania", 1), new Requirement("Peachy Bones", 1),
            new Requirement("Pious Prayers", 1), new Requirement("Port Life", 1),
            new Requirement("Potion Mixer Master", 1), new Requirement("Potion for a Lady", 1),
            new Requirement("Reaper Crew", 1), new Requirement("Rhian in Gold - The Original", 1),
            new Requirement("Seren Memories", 1), new Requirement("Sing for the Lady", 1),
            new Requirement("Slayer Master", 1), new Requirement("Stay Safe", 1), new Requirement("Stay Secure", 1),
            new Requirement("Task Master", 1), new Requirement("Tell Tale Tarn", 1),
            new Requirement("Trip to the East", 1), new Requirement("Troublesome Crystals", 1),
            new Requirement("Uncorrupted Ore", 1), new Requirement("Walking the Reef", 1),
            new Requirement("What's Mine Is Also Doric's", 1), new Requirement("Yaktwee's a Charm", 1),
            new Requirement("You Be Dead", 1), new Requirement("Zarosian Memories", 1)), true),
    CONQUEST_ADORE("Conquest Adore", 0, Collections.singletonList(new Requirement("Conquest rank", 1250)), true),
    CONSTITUTION_MORTY("Constitution - Morty", 0, Collections.singletonList(new Requirement("Morty", 1)), true),
    CONSTITUTION_15("Constitution 15", 0, Collections.singletonList(new Requirement("Constitution", 15)), true),
    CONSTITUTION_20("Constitution 20", 0, Collections.singletonList(new Requirement("Constitution", 20)), true),
    CONSTITUTION_30("Constitution 30", 0, Collections.singletonList(new Requirement("Constitution", 30)), true),
    CONSTITUTION_40("Constitution 40", 0, Collections.singletonList(new Requirement("Constitution", 40)), true),
    CONSTITUTION_50("Constitution 50", 0, Collections.singletonList(new Requirement("Constitution", 50)), true),
    CONSTITUTION_60("Constitution 60", 0, Collections.singletonList(new Requirement("Constitution", 60)), true),
    CONSTITUTION_70("Constitution 70", 0, Collections.singletonList(new Requirement("Constitution", 70)), true),
    CONSTITUTION_80("Constitution 80", 0, Collections.singletonList(new Requirement("Constitution", 80)), true),
    CONSTITUTION_90("Constitution 90", 0, Collections.singletonList(new Requirement("Constitution", 90)), true),
    CONSTITUTION_92("Constitution 92", 0, Collections.singletonList(new Requirement("Constitution", 92)), true),
    CONSTITUTION_99("Constitution 99", 0, Collections.singletonList(new Requirement("Constitution", 99)), true),
    CONSTRUCTION_BABA_YAGAS_HOUSE("Construction - Baba Yaga's House", 0, Collections.singletonList(new Requirement("Baby Yaga's House'", 1)), true),
    CONSTRUCTION_5("Construction 5", 0, Collections.singletonList(new Requirement("Construction", 5)), true),
    CONSTRUCTION_10("Construction 10", 0, Collections.singletonList(new Requirement("Construction", 10)), true),
    CONSTRUCTION_20("Construction 20", 0, Collections.singletonList(new Requirement("Construction", 20)), true),
    CONSTRUCTION_30("Construction 30", 0, Collections.singletonList(new Requirement("Construction", 30)), true),
    CONSTRUCTION_40("Construction 40", 0, Collections.singletonList(new Requirement("Construction", 40)), true),
    CONSTRUCTION_50("Construction 50", 0, Collections.singletonList(new Requirement("Construction", 50)), true),
    CONSTRUCTION_60("Construction 60", 0, Collections.singletonList(new Requirement("Construction", 60)), true),
    CONSTRUCTION_70("Construction 70", 0, Collections.singletonList(new Requirement("Construction", 70)), true),
    CONSTRUCTION_80("Construction 80", 0, Collections.singletonList(new Requirement("Construction", 80)), true),
    CONSTRUCTION_90("Construction 90", 0, Collections.singletonList(new Requirement("Construction", 90)), true),
    CONSTRUCTION_92("Construction 92", 0, Collections.singletonList(new Requirement("Construction", 92)), true),
    CONSTRUCTION_99("Construction 99", 0, Collections.singletonList(new Requirement("Construction", 99)), true),
    COOKS_DELIGHT("Cook's Delight", 0, Collections.singletonList(new Requirement("Cook's Assistant", 1)), true),
    COOKING_RAMSAY("Cooking - Ramsay", 0, Collections.singletonList(new Requirement("Ramsay", 1)), true),
    COOKING_5("Cooking 5", 0, Collections.singletonList(new Requirement("Cooking", 5)), true),
    COOKING_10("Cooking 10", 0, Collections.singletonList(new Requirement("Cooking", 10)), true),
    COOKING_20("Cooking 20", 0, Collections.singletonList(new Requirement("Cooking", 20)), true),
    COOKING_30("Cooking 30", 0, Collections.singletonList(new Requirement("Cooking", 30)), true),
    COOKING_40("Cooking 40", 0, Collections.singletonList(new Requirement("Cooking", 40)), true),
    COOKING_50("Cooking 50", 0, Collections.singletonList(new Requirement("Cooking", 50)), true),
    COOKING_60("Cooking 60", 0, Collections.singletonList(new Requirement("Cooking", 60)), true),
    COOKING_70("Cooking 70", 0, Collections.singletonList(new Requirement("Cooking", 70)), true),
    COOKING_80("Cooking 80", 0, Collections.singletonList(new Requirement("Cooking", 80)), true),
    COOKING_90("Cooking 90", 0, Collections.singletonList(new Requirement("Cooking", 90)), true),
    COOKING_92("Cooking 92", 0, Collections.singletonList(new Requirement("Cooking", 92)), true),
    COOKING_99("Cooking 99", 0, Collections.singletonList(new Requirement("Cooking", 99)), true),
    CORMES_AND_GOES("Cormes and Goes", 0, new ArrayList<>(), Collections.singletonList(new Encounter(Arrays.asList(Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER,
			Enemy.CHARGER), Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER), Arrays.asList(Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER, Enemy.CHARGER),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT),
			Arrays.asList(Enemy.TUZ, Enemy.KRAR, Enemy.BEASTMASTER_DURZAG)), new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
    CORPOREAL_PUNISHMENT_I("Corporeal Punishment I", 0, Collections.singletonList(new Requirement("Corporeal Beast", 5)), true),
    CORPOREAL_PUNISHMENT_II("Corporeal Punishment II", 0, Collections.singletonList(new Requirement("Corporeal Beast", 10)), true),
    CORPOREAL_PUNISHMENT_III("Corporeal Punishment III", 0, Collections.singletonList(new Requirement("Corporeal Beast", 25)), true),
    CORPOREAL_PUNISHMENT_IV("Corporeal Punishment IV", 0, Collections.singletonList(new Requirement("Corporeal Beast", 50)), true),
    CORPOREAL_PUNISHMENT_V("Corporeal Punishment V", 0, Collections.singletonList(new Requirement("Corporeal Beast", 75)), true),
    CORPOREAL_PUNISHMENT_VI("Corporeal Punishment VI", 0, Collections.singletonList(new Requirement("Corporeal Beast", 100)), true),
    CORPOREAL_PUPPY("Corporeal Puppy", 0, Collections.singletonList(new Requirement("Corporeal Puppy", 1)), true),
    COUNT_ALL_LIGHT_FINGERS("Count All Light Fingers", 0, Arrays.asList(new Requirement("From Tiny Acorns", 1),
            new Requirement("Lost Her Marbles", 1), new Requirement("A Guild of Our Own", 1)), true),
    COURSING_THROUGH_YOU("Coursing Through You", 0, Collections.singletonList(new Requirement("Max Telos enrage", 95)),
            Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.TELOS_100_ENRAGE)), new ArrayList<>())),
			new ArrayList<>(), new ArrayList<>(), true),
    COWER_BEHIND_THE_CHOSEN_COMMANDER("Cower Behind the Chosen Commander", 0, Collections.singletonList(new Requirement("The Chosen Commander", 1)),
            new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Arrays.asList("Constitution", "Attack", "Defense"),
            1000, 1)), true),
    CRAFTING_GEMI("Crafting - Gemi", 0, Collections.singletonList(new Requirement("Gemi", 1)), true),
    CRAFTING_5("Crafting 5", 0, Collections.singletonList(new Requirement("Crafting", 5)), true),
    CRAFTING_10("Crafting 10", 0, Collections.singletonList(new Requirement("Crafting", 10)), true),
    CRAFTING_20("Crafting 20", 0, Collections.singletonList(new Requirement("Crafting", 20)), true),
    CRAFTING_30("Crafting 30", 0, Collections.singletonList(new Requirement("Crafting", 30)), true),
    CRAFTING_40("Crafting 40", 0, Collections.singletonList(new Requirement("Crafting", 40)), true),
    CRAFTING_50("Crafting 50", 0, Collections.singletonList(new Requirement("Crafting", 50)), true),
    CRAFTING_60("Crafting 60", 0, Collections.singletonList(new Requirement("Crafting", 60)), true),
    CRAFTING_70("Crafting 70", 0, Collections.singletonList(new Requirement("Crafting", 70)), true),
    CRAFTING_80("Crafting 80", 0, Collections.singletonList(new Requirement("Crafting", 80)), true),
    CRAFTING_90("Crafting 90", 0, Collections.singletonList(new Requirement("Crafting", 90)), true),
    CRAFTING_92("Crafting 92", 0, Collections.singletonList(new Requirement("Crafting", 92)), true),
    CRAFTING_99("Crafting 99", 0, Collections.singletonList(new Requirement("Crafting", 99)), true),
    CRAN_DOORS_SECRET("Cran Door's Secret", 0, Collections.singletonList(new Requirement("Dragon Slayer", 1)), true),
    CRAYFISH_ROASTING_ON_AN_OPEN_FIRE("Crayfish Roasting On An Open Fire", 0, Collections.singletonList(new Requirement("Raw crayfish", 1)),
            new ArrayList<>(), Arrays.asList(new Reward("Crayfish", 1), new Reward("Cooking", 30)),
            new ArrayList<>(), true),
    CREATOR_AND_DESTROYER("Creator and Destroyer", 0, Arrays.asList(new Requirement("Tower of Life", 1),
            new Requirement("Cowhide", 1), new Requirement("Unicorn horn", 1)),
            Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.UNICOW)), new ArrayList<>())),
			new ArrayList<>(), new ArrayList<>(), true),
    CROCODILE_TEARS("Crocodile Tears", 0, Collections.singletonList(new Requirement("Crocodile Tears (quest)", 1)), true),
    CROSSING_OVER_I("Crossing Over I", 0, Collections.singletonList(new Requirement("The Magister", 5)), true),
    CROSSING_OVER_II("Crossing Over II", 0, Collections.singletonList(new Requirement("The Magister", 10)), true),
    CROSSING_OVER_III("Crossing Over III", 0, Collections.singletonList(new Requirement("The Magister", 25)), true),
    CROSSING_OVER_IV("Crossing Over IV", 0, Collections.singletonList(new Requirement("The Magister", 50)), true),
    CROSSING_OVER_V("Crossing Over V", 0, Collections.singletonList(new Requirement("The Magister", 75)), true),
    CROSSING_OVER_VI("Crossing Over VI", 0, Collections.singletonList(new Requirement("The Magister", 100)), true),
    DAEMONHEIM_SET_TASKS_EASY("Daemonheim Set Tasks - Easy", 0, Arrays.asList(new Requirement("Setting Up", 1),
            new Requirement("It's Dangerous to go Alone", 1), new Requirement("Kitchen Aid", 1),
            new Requirement("The Lone Dungeoneer", 1), new Requirement("Dere-licked", 1),
            new Requirement("Take It From the Top", 1), new Requirement("Change of a Dress", 1),
            new Requirement("Gorajo Fandago", 1), new Requirement("You're Not the Boss of Me", 1),
            new Requirement("A Road Less Travelled", 1), new Requirement("Invisible Ink", 1),
            new Requirement("Untouchable", 1), new Requirement("Fashion Victim", 1),
            new Requirement("Sinking Fast", 1), new Requirement("Tales of Old", 1), new Requirement("A Flicker in Darkness", 1)),
            new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Player.ALL_SKILLS, 2000, 23)), true),
    DAEMONHEIM_SET_TASKS_ELITE("Daemonheim Set Tasks - Elite", 0, Arrays.asList(new Requirement("Any fin is Possible", 1),
            new Requirement("Orbful", 1), new Requirement("Top Hat", 1), new Requirement("In the Darkness Bind Them", 1),
            new Requirement("Pass the Port", 1), new Requirement("Gulega-d to Rest", 1)),
            new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Lamp(Player.ALL_SKILLS, 60000, 98), new Lamp(Player.ALL_SKILLS, 50000, 90),
            new Lamp(Player.ALL_SKILLS, 50000, 90), new Lamp(Player.ALL_SKILLS, 50000, 90)), true),
    DAEMONHEIM_SET_TASKS_HARD("Daemonheim Set Tasks - Hard", 0, Arrays.asList(new Requirement("Occult Classic", 1),
            new Requirement("Stacked", 1), new Requirement("Kinprovements", 1), new Requirement("Lawful Crafting", 1),
            new Requirement("Thanks for the Memories", 1), new Requirement("Healing Factor", 1),
            new Requirement("Alcrabholic", 1), new Requirement("Hoof Rot", 1), new Requirement("A Prayer Opportunity", 1),
            new Requirement("The Wanderer", 1), new Requirement("Get Stuffed", 1), new Requirement("Epic Epic", 1)),
            new ArrayList<>(), Collections.singletonList(new Reward("Dungeoneering token", 38000)), Collections.singletonList(new Lamp(Player.ALL_SKILLS,
            20000, 74)), true),
    DAEMONHEIM_SET_TASKS_MEDIUM("Daemonheim Set Tasks - Medium", 0, Arrays.asList(new Requirement("You Got Some Nice Drapes There", 1),
            new Requirement("I Want It All", 1), new Requirement("And I Want It Now", 1),
            new Requirement("Marm's Armoury", 1), new Requirement("Tactical Retreat", 1),
            new Requirement("Port Enter", 1), new Requirement("Totem Pole Position", 1),
            new Requirement("Nice to Meet You, Wall", 1), new Requirement("300", 1),
            new Requirement("Drink Me", 1), new Requirement("Spinal Tap", 1), new Requirement("Cache Box", 1),
            new Requirement("Up to the Gods", 1)), new ArrayList<>(), Collections.singletonList(new Reward("Dungeoneering token", 2000)),
            Collections.singletonList(new Lamp(Player.ALL_SKILLS, 8000, 41)), true),
    DAEMONOLOGY_OF_CELERITY("Daemonology of Celerity", 0, Collections.singletonList(new Requirement("Demon flash mob", 1)), true),
    DAERO_TAKE_THIS_EXPERIENCE("Daero Take This Experience?", 0, Collections.singletonList(new Requirement("Monkey Madness", 1)),
            new ArrayList<>(), Arrays.asList(new Reward("Attack", 20000), new Reward("Strength", 20000),
            new Reward("Defense", 10000), new Reward("Constitution", 20000)), Arrays.asList(new Lamp(Arrays.asList("Attack", "Strength"),
            15000, 1), new Lamp(Arrays.asList("Constitution", "Defense"), 15000, 1)), true),
    DAGANNOTH_TRAFFIC_WARDENS("Dagannoth Traffic Wardens", 0, Collections.singletonList(new Requirement("Koschei's Troubles", 1)),
            Arrays.asList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.DAGANNOTH_SUPREME)),
							Collections.singletonList(new Restriction("Achromatic Balmung", 1))),
					new Encounter(Collections.singletonList(Collections.singletonList(Enemy.DAGANNOTH_SUPREME)),
							Collections.singletonList(new Restriction("Cobalt Balmung", 1))),
					new Encounter(Collections.singletonList(Collections.singletonList(Enemy.DAGANNOTH_SUPREME)),
							Collections.singletonList(new Restriction("Crimson Balmung", 1))),
					new Encounter(Collections.singletonList(Collections.singletonList(Enemy.DAGANNOTH_SUPREME)),
							Collections.singletonList(new Restriction("Viridian Balmung", 1)))), new ArrayList<>(), new ArrayList<>(), true),
    DAGANNOTH_FOR_EVERYONE_I("Dagannoth For Everyone I", 0, Collections.singletonList(new Requirement("Dagannoth Kings", 5)), true),
    DAGANNOTH_FOR_EVERYONE_II("Dagannoth For Everyone II", 0, Collections.singletonList(new Requirement("Dagannoth Kings", 10)), true),
    DAGANNOTH_FOR_EVERYONE_III("Dagannoth For Everyone III", 0, Collections.singletonList(new Requirement("Dagannoth Kings", 25)), true),
    DAGANNOTH_FOR_EVERYONE_IV("Dagannoth For Everyone IV", 0, Collections.singletonList(new Requirement("Dagannoth Kings", 50)), true),
    DAGANNOTH_FOR_EVERYONE_V("Dagannoth For Everyone V", 0, Collections.singletonList(new Requirement("Dagannoth Kings", 75)), true),
    DAGANNOTH_FOR_EVERYONE_VI("Dagannoth For Everyone VI", 0, Collections.singletonList(new Requirement("Dagannoth Kings", 100)), true),
    DARK_IMPERATORMENT("Dark Imperator-ment", 0, Arrays.asList(new Requirement("Constitution", 91), new Requirement("Attack", 75),
            new Requirement("Magic", 75), new Requirement("Ranged", 75), new Requirement("Dimension of Disaster: Coin of the Realm", 1)),
            new ArrayList<>(), Collections.singletonList(new Reward("Zemomark", 40)), new ArrayList<>(), true),
    DAY_AT_THE_AQUARIUM("Day at the Aquarium", 0, Collections.singletonList(new Requirement("Beastmaster Durzag", 1)), Collections.singletonList(new Encounter(
			Arrays.asList(Collections.singletonList(Enemy.YAKAMARU), Collections.singletonList(Enemy.IMAGE_OF_YAKAMARU), Collections.singletonList(Enemy.IMAGE_OF_YAKAMARU),
					Collections.singletonList(Enemy.IMAGE_OF_YAKAMARU), Collections.singletonList(Enemy.IMAGE_OF_YAKAMARU)), new ArrayList<>())), new ArrayList<>(),
            new ArrayList<>(), true),
    DAY_AT_THE_POUND("Day at the Pound", 0, new ArrayList<>(), Collections.singletonList(new Encounter(Arrays.asList(Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER,
			Enemy.CHARGER), Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER), Arrays.asList(Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER, Enemy.CHARGER),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER, Enemy.CORMES),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT),
			Arrays.asList(Enemy.TUZ, Enemy.KRAR, Enemy.BEASTMASTER_DURZAG)), new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
    DEADLIER_CATCH("Deadlier Catch", 0, Collections.singletonList(new Requirement("Thalassus hunts", 10)), true),
    DEATH_EFFECT("Death Effect", 0, Arrays.asList(new Requirement("Book of death", 1),
            new Requirement("Reaper's choice", 1), new Requirement("Rainbow loot beam", 1),
            new Requirement("Grave loot beam", 1), new Requirement("Bonfire booster", 1),
            new Requirement("Instance cost", 1), new Requirement("Additional tasks", 1),
            new Requirement("Reaper scroll", 1), new Requirement("Death's support", 1)), true),
    DEATH_TO_THE_MAHJARRAT("Death to the Mahjarrat", 0, Collections.singletonList(new Requirement("Mahjarrat deathstone", 4)), true),
    DEEP_AND_BLOODY_EXPERIENCE("Deep and Bloody Experience", 0, Collections.singletonList(new Requirement("Blood Runs Deep", 1)),
            new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Lamp(Arrays.asList("Attack", "Strength", "Defense", "Constitution", "Ranged", "Magic", "Prayer"),
            150000, 75), new Lamp(Arrays.asList("Attack", "Strength", "Defense", "Constitution", "Ranged", "Magic", "Prayer"),
            150000, 75), new Lamp(Arrays.asList("Attack", "Strength", "Defense", "Constitution", "Ranged", "Magic", "Prayer"),
            150000, 75)), true),
    DEFENSE_WALLACE("Defence - Wallace", 0, Collections.singletonList(new Requirement("Wallace", 1)), true),
    DEFENSE_5("Defense 5", 0, Collections.singletonList(new Requirement("Defense", 5)), true),
    DEFENSE_10("Defense 10", 0, Collections.singletonList(new Requirement("Defense", 10)), true),
    DEFENSE_20("Defense 20", 0, Collections.singletonList(new Requirement("Defense", 20)), true),
    DEFENSE_30("Defense 30", 0, Collections.singletonList(new Requirement("Defense", 30)), true),
    DEFENSE_40("Defense 40", 0, Collections.singletonList(new Requirement("Defense", 40)), true),
    DEFENSE_50("Defense 50", 0, Collections.singletonList(new Requirement("Defense", 50)), true),
    DEFENSE_60("Defense 60", 0, Collections.singletonList(new Requirement("Defense", 60)), true),
    DEFENSE_70("Defense 70", 0, Collections.singletonList(new Requirement("Defense", 70)), true),
    DEFENSE_80("Defense 80", 0, Collections.singletonList(new Requirement("Defense", 80)), true),
    DEFENSE_90("Defense 90", 0, Collections.singletonList(new Requirement("Defense", 90)), true),
    DEFENSE_92("Defense 92", 0, Collections.singletonList(new Requirement("Defense", 92)), true),
    DEFENSE_99("Defense 99", 0, Collections.singletonList(new Requirement("Defense", 99)), true),
    DESCENSION_I("Descension I", 0, Collections.singletonList(new Requirement("Legiones", 5)), true),
    DESCENSION_II("Descension II", 0, Collections.singletonList(new Requirement("Legiones", 10)), true),
    DESCENSION_III("Descension III", 0, Collections.singletonList(new Requirement("Legiones", 25)), true),
    DESCENSION_IV("Descension IV", 0, Collections.singletonList(new Requirement("Legiones", 50)), true),
    DESCENSION_V("Descension V", 0, Collections.singletonList(new Requirement("Legiones", 75)), true),
    DESCENSION_VI("Descension VI", 0, Collections.singletonList(new Requirement("Legiones", 100)), true),
    DESERTED_GHOSTS("Desert-ed Ghosts", 0, Collections.singletonList(new Requirement("The Curse of Zaros", 1)), true),
    DESERT_SET_TASKS_EASY("Desert Set Tasks - Easy", 0, Arrays.asList(new Requirement("Assassin's Feed", 1),
            new Requirement("Touring Gear", 1), new Requirement("Memento Mori", 1), new Requirement("Fool's Gold", 1),
            new Requirement("Don't You Dare Close Your Eyes", 1), new Requirement("Slash Fund", 1),
            new Requirement("Kookookachat", 1), new Requirement("Fire at Will", 1), new Requirement("Seems Legit", 1),
            new Requirement("Extra Cheese", 1), new Requirement("I Like to Watch", 1),
            new Requirement("Wiggle Room", 1)), new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Player.ALL_SKILLS,
            2000, 29)), true),
    DESERT_SET_TASKS_ELITE("Desert Set Tasks - Elite", 0, Arrays.asList(new Requirement("Staff on Stryke", 1),
            new Requirement("Room Service", 1), new Requirement("Sun Shade", 1), new Requirement("A. B. Cithara", 1),
            new Requirement("Ankle Support", 1), new Requirement("I'm Super", 1)), new ArrayList<>(),
            new ArrayList<>(), Arrays.asList(new Lamp(Player.ALL_SKILLS, 30000, 77), new Lamp(Player.ALL_SKILLS, 30000, 77),
            new Lamp(Player.ALL_SKILLS, 50000, 93), new Lamp(Player.ALL_SKILLS, 50000, 93)), true),
    DESERT_SET_TASKS_HARD("Desert Set Tasks - Hard", 0, Arrays.asList(new Requirement("Skinful", 1), new Requirement("Water on the Brain", 1),
            new Requirement("More Fletcher than Sumona", 1), new Requirement("Ug Thankee Kindly", 1),
            new Requirement("Nipped in the Bug", 1), new Requirement("Drafty in Here", 1),
            new Requirement("Enaqua", 1), new Requirement("Say It, Don't Spray It", 1),
            new Requirement("1001 Kharidian Spikes", 1), new Requirement("Ice-Cold Killer", 1),
            new Requirement("Ludikeris", 1), new Requirement("Security through Obscurity", 1),
            new Requirement("Wake-Up Call", 1), new Requirement("Open Sesame", 1)), new ArrayList<>(),
            new ArrayList<>(), Collections.singletonList(new Lamp(Player.ALL_SKILLS, 20000, 1)), true),
    DESERT_SET_TASKS_MEDIUM("Desert Set Tasks - Medium", 0, Arrays.asList(new Requirement("Faster than a Speeding Bullet", 1),
            new Requirement("So Su Me", 1), new Requirement("A Bridge Not Far", 1), new Requirement("Heathen Idle", 1),
            new Requirement("Away with the Kalphites", 1), new Requirement("All Square", 1),
            new Requirement("Goat Harralader?", 1), new Requirement("Taken for Granite", 1),
            new Requirement("Unbeetleable", 1), new Requirement("An Teak", 1), new Requirement("Overcut", 1)),
            new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Player.ALL_SKILLS, 8000, 43)), true),
    DHAROK_BOBBLEHEAD("Dharok Bobblehead", 0, Collections.singletonList(new Requirement("Dharok the Bobbled", 1)), true),
    DIARIES_OF_THE_CLANS("Diaries of the Clans", 0, Collections.singletonList(new Requirement("Voice of the Elders", 8)), true),
    DIARY_OF_OREB("Diary of Oreb", 0, Collections.singletonList(new Requirement("The Magister's Journals", 5)), true),
    DIARY_OF_THE_GODS("Diary of the Gods", 0, Collections.singletonList(new Requirement("God journals", 5)), true),
    DIDDYZAG("Diddyzag", 0, Collections.singletonList(new Requirement("Diddyzag", 1)), true),
    DISHONOURABLE_GAINS("Dishonourable Gains", 0, Collections.singletonList(new Requirement("Zamorak hideout XP chests", 3)), true),
    DISHONOURABLE_LOOT("Dishonourable Gains", 0, Collections.singletonList(new Requirement("Zamorak hideout loot chests", 6)), true),
    DISOWNED("Disowned", 0, Arrays.asList(new Requirement("Reforged Sunspear", 1), new Requirement("House Drakan hood", 1),
            new Requirement("House Drakan top", 1), new Requirement("House Drakan trousers", 1),
            new Requirement("House Drakan boots", 1)), Collections.singletonList(new Encounter(Arrays.asList(Collections.singletonList(Enemy.VANSTROM_KLAUSE),
            Collections.singletonList(Enemy.VANSTROM_KLAUSE)), Arrays.asList(new Restriction("Reforged Sunspear", 1),
			new Restriction("House Drakan hood", 1), new Restriction("House Drakan top", 1),
			new Restriction("House Drakan trousers", 1), new Restriction("House Drakan boots", 1)))), new ArrayList<>(), new ArrayList<>(), true),
    DISTORTED_DIV("Distorted Div", 0, Collections.singletonList(new Requirement("Distorted engrammeter", 1)),
            new ArrayList<>(), Collections.singletonList(new Reward("Divination", 25000)), new ArrayList<>(), true),
    DIVINATION_WILLOW("Divination - Willow", 0, Collections.singletonList(new Requirement("Willow", 1)), true),
    DIVINATION_5("Divination 5", 0, Collections.singletonList(new Requirement("Divination", 5)), true),
    DIVINATION_10("Divination 10", 0, Collections.singletonList(new Requirement("Divination", 10)), true),
    DIVINATION_20("Divination 20", 0, Collections.singletonList(new Requirement("Divination", 20)), true),
    DIVINATION_30("Divination 30", 0, Collections.singletonList(new Requirement("Divination", 30)), true),
    DIVINATION_40("Divination 40", 0, Collections.singletonList(new Requirement("Divination", 40)), true),
    DIVINATION_50("Divination 50", 0, Collections.singletonList(new Requirement("Divination", 50)), true),
    DIVINATION_60("Divination 60", 0, Collections.singletonList(new Requirement("Divination", 60)), true),
    DIVINATION_70("Divination 70", 0, Collections.singletonList(new Requirement("Divination", 70)), true),
    DIVINATION_80("Divination 80", 0, Collections.singletonList(new Requirement("Divination", 80)), true),
    DIVINATION_90("Divination 90", 0, Collections.singletonList(new Requirement("Divination", 90)), true),
    DIVINATION_92("Divination 92", 0, Collections.singletonList(new Requirement("Divination", 92)), true),
    DIVINATION_99("Divination 99", 0, Collections.singletonList(new Requirement("Divination", 99)), true),
    DIVINE_RETRIBUTION("Divine Retribution", 0, Arrays.asList(new Requirement("Business Is Booning", 1),
            new Requirement("Collecting Memorabilia", 1), new Requirement("Energy Generator", 1),
            new Requirement("Enrichment Programme", 1), new Requirement("Just Give Me a Sign", 1),
            new Requirement("Let's Enhance", 1), new Requirement("Mighty Morphing", 1),
            new Requirement("Portentially Hazardous", 1), new Requirement("Simply Divine", 1),
            new Requirement("What an Experience", 1)), new ArrayList<>(), Collections.singletonList(new Reward("Flickering energy", 500)),
            new ArrayList<>(), true),
    DO_NO_ELITE("Do No Elite", 0, Collections.singletonList(new Requirement("Do No Evil elite clue", 1)), true),
    DO_A_MINION_TAKE_NOTES("Do a Minion, Take Notes", 0, Collections.singletonList(new Requirement("Dominion page", 20)), true),
    DOING_THE_IRONING("Doing the Ironing", 0, Collections.singletonList(new Requirement("Mining", 15)), new ArrayList<>(),
            Collections.singletonList(new Reward("Iron ore", 1)), new ArrayList<>(), true),
    DONT_EAT_THE_POINTY_BIT("Don't Eat the Pointy Bit", 0, Collections.singletonList(new Requirement("Coins", 25)),
            new ArrayList<>(), Collections.singletonList(new Reward("Skewered kebab", 1)), new ArrayList<>(), true),
    DONT_FEAR_THE_RIPPER("Don't Fear the Ripper", 0, Collections.singletonList(new Requirement("Miner's journals", 6)), true),
    DOUBLE_SWOOP("Double Swoop", 0, Collections.singletonList(new Requirement("Ranged", 70)), Collections
			.singletonList(new Encounter(Arrays.asList(Arrays.asList(Enemy.FLIGHT_KILISA, Enemy.WINGMAN_SKREE, Enemy.FLOCKLEADER_GEERIN),
					Arrays.asList(Enemy.FLIGHT_KILISA, Enemy.WINGMAN_SKREE, Enemy.FLOCKLEADER_GEERIN, Enemy.KREEARRA)),
					new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
    DRAGONKIN_LOGS("Dragonkin Logs", 0, Collections.singletonList(new Requirement("Dragonkin journals", 4)), true),
    DRAYNOR("Draynor", 0, new ArrayList<>(), true),
    DUKES_OF_KHAZARD("Dukes of Khazard", 0, new ArrayList<>(), Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.GNOME_TROOP)),
			new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
    DUNGEONEERING_GORDIE("Dungeoneering - Gordie", 0, Collections.singletonList(new Requirement("Gordie", 1)), true),
    DUNGEONEERING_5("Dungeoneering 5", 0, Collections.singletonList(new Requirement("Dungeoneering", 5)), true),
    DUNGEONEERING_10("Dungeoneering 10", 0, Collections.singletonList(new Requirement("Dungeoneering", 10)), true),
    DUNGEONEERING_20("Dungeoneering 20", 0, Collections.singletonList(new Requirement("Dungeoneering", 20)), true),
    DUNGEONEERING_30("Dungeoneering 30", 0, Collections.singletonList(new Requirement("Dungeoneering", 30)), true),
    DUNGEONEERING_40("Dungeoneering 40", 0, Collections.singletonList(new Requirement("Dungeoneering", 40)), true),
    DUNGEONEERING_50("Dungeoneering 50", 0, Collections.singletonList(new Requirement("Dungeoneering", 50)), true),
    DUNGEONEERING_60("Dungeoneering 60", 0, Collections.singletonList(new Requirement("Dungeoneering", 60)), true),
    DUNGEONEERING_70("Dungeoneering 70", 0, Collections.singletonList(new Requirement("Dungeoneering", 70)), true),
    DUNGEONEERING_80("Dungeoneering 80", 0, Collections.singletonList(new Requirement("Dungeoneering", 80)), true),
    DUNGEONEERING_90("Dungeoneering 90", 0, Collections.singletonList(new Requirement("Dungeoneering", 90)), true),
    DUNGEONEERING_99("Dungeoneering 99", 0, Collections.singletonList(new Requirement("Dungeoneering", 99)), true),
    DUNGEONEERING_110("Dungeoneering 110", 0, Collections.singletonList(new Requirement("Dungeoneering", 110)), true),
    DUNGEONEERING_120("Dungeoneering 120", 0, Collections.singletonList(new Requirement("Dungeoneering", 120)), true),
    DUSTING_MURIAL("Dusting Murial", 0, Collections.singletonList(new Requirement("Dusted murals", 2)), true),
    EAGLES_PEAK("Eagles' Peak", 0, new ArrayList<>(), true),
    EASTERN_ADVENTURER("Eastern Adventurer", 0, Collections.singletonList(new Requirement("Port storylines", 4)), true),
    EASTERN_EXPLORER("Eastern Explorer", 0, Collections.singletonList(new Requirement("The Shield region", 1)), true),
    EAT_TO_LIVE("Eat to Live", 0, Collections.singletonList(new Requirement("Sardine", 1)), true),
    EDGEVILLE("Edgeville", 0, new ArrayList<>(), true),
    EEEAGLE("Eeeeagle!", 0, Collections.singletonList(new Requirement("Eagle transport routes", 5)), true),
    ELEMENTAL_KILL_CHAOS_I("Elemental Kill Chaos I", 0, Collections.singletonList(new Requirement("Chaos Elemental", 5)), true),
    ELEMENTAL_KILL_CHAOS_II("Elemental Kill Chaos II", 0, Collections.singletonList(new Requirement("Chaos Elemental", 10)), true),
    ELEMENTAL_KILL_CHAOS_III("Elemental Kill Chaos III", 0, Collections.singletonList(new Requirement("Chaos Elemental", 25)), true),
    ELEMENTAL_KILL_CHAOS_IV("Elemental Kill Chaos IV", 0, Collections.singletonList(new Requirement("Chaos Elemental", 50)), true),
    ELEMENTAL_KILL_CHAOS_V("Elemental Kill Chaos V", 0, Collections.singletonList(new Requirement("Chaos Elemental", 75)), true),
    ELEMENTAL_KILL_CHAOS_VI("Elemental Kill Chaos VI", 0, Collections.singletonList(new Requirement("Chaos Elemental", 100)), true),
    ELLIE("Ellie", 0, Collections.singletonList(new Requirement("Ellie", 1)), true),
    ELVEN_TITLES("Elven Titles", 0, Collections.singletonList(new Requirement("Elf City titles", 8)), true),
    ENERGY_GENERATOR("Energy Generator", 0, new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Reward("Pale energy", 1),
            new Reward("Divination", 1)), new ArrayList<>(), true),
    ENOUGH_OF_THE_CRAZY_WALKING("Enough of the Crazy Walking", 0, Collections.singletonList(new Requirement("Mad Ramblings", 2)), true),
    ENRICHMENT_PROGRAMME("Enrichment Programme", 0, new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Reward("Divination", 2)),
            new ArrayList<>(), true),
    EPI_LOGUEQUE_EXPERIENCE("Epi Logueque Experience", 0, Collections.singletonList(new Requirement("While Guthix Sleeps", 1)),
            new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Lamp(Player.ALL_SKILLS, 100000, 65), new Lamp(Player.ALL_SKILLS, 100000, 65),
            new Lamp(Player.ALL_SKILLS, 100000, 65), new Lamp(Player.ALL_SKILLS, 100000, 65)), true),
    ESSENTIAL_FACILITATOR("Essential Facilitator", 0, new ArrayList<>(), true),
    EVERYBODY_LOVES_COAL("Everybody Loves Coal", 0, Collections.singletonList(new Requirement("Mining", 30)),
            new ArrayList<>(), Arrays.asList(new Reward("Coal", 1), new Reward("Mining", 50)),
            new ArrayList<>(), true),
    EXILED("Exiled", 0, Collections.singletonList(new Requirement("Kalphite King uniques", 8)), true),
    EXPERIENCE_THE_FATE_OF_THE_GODS("Experience the Fate of the Gods", 0, Collections.singletonList(new Requirement("Post-Fate of the Gods lamps", 4)), true),
    EXPLORE_FOR_NESTOR("Explore for Nestor", 0, new ArrayList<>(), true),
    FACELESS_AND_READY("Faceless and Ready", 0, new ArrayList<>(), true),
    FALADOR("Falador", 0, new ArrayList<>(), true),
    FALADOR_SET_TASKS_EASY("Falador Set Tasks - Easy", 0, Arrays.asList(new Requirement("Amulet of Weedspeak", 1),
            new Requirement("The Good Stuff", 1), new Requirement("Chain Store", 1),
            new Requirement("Sir Mitt", 1), new Requirement("Family Values", 1), new Requirement("Sniffing Out the Mole", 1),
            new Requirement("Chinchompa Powered!", 1), new Requirement("Fill Yer Bucket", 1),
            new Requirement("Elementary Medicine", 1), new Requirement("It's Not Wabbit Season", 1),
            new Requirement("Stand and Deliver", 1), new Requirement("Making My Mind Up", 1),
            new Requirement("Mudskip the Light Fantastic", 1), new Requirement("Disarm and Embark", 1),
            new Requirement("Going Along with the 'Fro", 1)), new ArrayList<>(), new ArrayList<>(),
            Collections.singletonList(new Lamp(Player.ALL_SKILLS, 1000, 30)), true),
    FALADOR_SET_TASKS_ELITE("Falador Set Tasks - Elite", 0, Arrays.asList(new Requirement("When This Cavern's Rockin'...", 1),
            new Requirement("You'd Best Come A-cookin'", 1), new Requirement("Concentration is Key", 1),
            new Requirement("I Swear I Heard It Scream", 1), new Requirement("I've Changed My Mind!", 1),
            new Requirement("A String and a Flare", 1), new Requirement("Altar-ed State", 1)),
            new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Lamp(Player.ALL_SKILLS, 30000, 90), new Lamp(Player.ALL_SKILLS, 30000, 90),
            new Lamp(Player.ALL_SKILLS, 50000, 84), new Lamp(Player.ALL_SKILLS, 50000, 72)), true),
    FALADOR_SET_TASKS_HARD("Falador Set Tasks - Hard", 0, Arrays.asList(new Requirement("It Matches My Eyes", 1),
            new Requirement("Child of Saradomin", 1), new Requirement("Mass Production", 1),
            new Requirement("It Spoiled My View", 1), new Requirement("The Stonemasons", 1),
            new Requirement("I Heard You Like Mudskips", 1), new Requirement("The Mogre Mash", 1),
            new Requirement("Why Oh Wyvern", 1), new Requirement("Banned For Life", 1),
            new Requirement("A Knight in the Darkness", 1)), new ArrayList<>(), new ArrayList<>(),
            Collections.singletonList(new Lamp(Player.ALL_SKILLS, 10000, 50)), true),
    FALADOR_SET_TASKS_MEDIUM("Falador Set Tasks - Medium", 0, Arrays.asList(new Requirement("Fruit of the Loom", 1),
            new Requirement("Is It Hard to Walk Round?", 1), new Requirement("Climbing the Walls", 1),
            new Requirement("It's Nothing Personal", 1), new Requirement("Ice the Icy", 1),
            new Requirement("Blinded with Science", 1), new Requirement("They Have Families to Feed", 1),
            new Requirement("Stoic Sweetcorn Guardian", 1), new Requirement("Look Spiffy For Tiffy", 1),
            new Requirement("Do They Come in Other Colours", 1), new Requirement("These Aren't the Coins You're Looking For", 1),
            new Requirement("Kitty Litter", 1)), new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Player.ALL_SKILLS, 5000, 40)), true),
    FALLEN_ANGEL("Fallen Angel", 0, Collections.singletonList(new Requirement("Angel of Death uniques", 10)), true),
    FAMILY_AFFAIR("Family Affair", 0, Collections.singletonList(new Requirement("Rise of the Six uniques", 10)), true),
    FAMILY_SPIRIT_TREE("Family Spirit Tree", 0, Collections.singletonList(new Requirement("Grown spirit trees", 3)),
            new ArrayList<>(), Collections.singletonList(new Reward("Farming", 50000)), new ArrayList<>(), true),
    FAMOUS("Famous", 0, Collections.singletonList(new Requirement("Morvran Slayer challenge", 1)), new ArrayList<>(),
            Arrays.asList(new Reward("Slayer", 50000), new Reward("Slayer points", 45)), new ArrayList<>(), true),
    FARMING_BRAINS("Farming - Brains", 0, Collections.singletonList(new Requirement("Brains", 1)), true),
    FARMING_5("Farming 5", 0, Collections.singletonList(new Requirement("Farming", 5)), true),
    FARMING_10("Farming 10", 0, Collections.singletonList(new Requirement("Farming", 10)), true),
    FARMING_20("Farming 20", 0, Collections.singletonList(new Requirement("Farming", 20)), true),
    FARMING_30("Farming 30", 0, Collections.singletonList(new Requirement("Farming", 30)), true),
    FARMING_40("Farming 40", 0, Collections.singletonList(new Requirement("Farming", 40)), true),
    FARMING_50("Farming 50", 0, Collections.singletonList(new Requirement("Farming", 50)), true),
    FARMING_60("Farming 60", 0, Collections.singletonList(new Requirement("Farming", 60)), true),
    FARMING_70("Farming 70", 0, Collections.singletonList(new Requirement("Farming", 70)), true),
    FARMING_80("Farming 80", 0, Collections.singletonList(new Requirement("Farming", 80)), true),
    FARMING_90("Farming 90", 0, Collections.singletonList(new Requirement("Farming", 90)), true),
    FARMING_92("Farming 92", 0, Collections.singletonList(new Requirement("Farming", 92)), true),
    FARMING_99("Farming 99", 0, Collections.singletonList(new Requirement("Farming", 99)), true),
    FAST_AND_FURIOUS_I("Fast and Furious I", 0, Collections.singletonList(new Requirement("Twin Furies", 5)), true),
    FAST_AND_FURIOUS_II("Fast and Furious II", 0, Collections.singletonList(new Requirement("Twin Furies", 10)), true),
    FAST_AND_FURIOUS_III("Fast and Furious III", 0, Collections.singletonList(new Requirement("Twin Furies", 25)), true),
    FAST_AND_FURIOUS_IV("Fast and Furious IV", 0, Collections.singletonList(new Requirement("Twin Furies", 50)), true),
    FAST_AND_FURIOUS_V("Fast and Furious V", 0, Collections.singletonList(new Requirement("Twin Furies", 75)), true),
    FAST_AND_FURIOUS_VI("Fast and Furious VI", 0, Collections.singletonList(new Requirement("Twin Furies", 100)), true),
    FEROCIOUS_UPGRADE("Ferocious Upgrade", 0, Arrays.asList(new Requirement("Slayer", 90), new Requirement("Slayer point", 100)), true),
    FINAL_BOSS("Final Boss", 0, Arrays.asList(new Requirement("Who's the Boss? VI", 1), new Requirement("General Mayhem VI", 1),
            new Requirement("Zilly Way to Die VI", 1), new Requirement("Three Heads are Deader than One VI", 1),
            new Requirement("Mole Removal VI", 1), new Requirement("Along Came a Spider VI", 1),
            new Requirement("Bug Swatter VI", 1), new Requirement("Vindictive and Vexatious VI", 1),
            new Requirement("Fast and Furious VI", 1), new Requirement("Elemental Kill Chaos VI", 1),
            new Requirement("Hardly a Challenge VI", 1), new Requirement("Barrowed Power VI", 1),
            new Requirement("Come and Have Vorago VI", 1), new Requirement("Nex Pls VI", 1),
            new Requirement("Yak and Ruin VI", 1), new Requirement("Bird is the Word VI", 1),
            new Requirement("Kill K'ril VI", 1), new Requirement("Corporeal Punishment VI", 1),
            new Requirement("Loot Pinata VI", 1), new Requirement("Descension VI", 1),
            new Requirement("Dagannoth For Everyone VI", 1), new Requirement("Telos Where it Hurts VI", 1),
            new Requirement("This Helwyr in VI", 1), new Requirement("Gregorgeous VI", 1),
            new Requirement("Living on a Prayer Switch VI", 1), new Requirement("Something Barrowed VI", 1),
            new Requirement("Bug Zapper VI", 1), new Requirement("Brass Nex VI", 1), new Requirement("Master of Beatings VI", 1)), true),
    FINISH_HIM("Finish Him!", 0, new ArrayList<>(), Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.VORAGO)),
			new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
    FIREMAKING_BERNIE("Firemaking - Bernie", 0, Collections.singletonList(new Requirement("Bernie", 1)), true),
    FIREMAKING_5("Firemaking 5", 0, Collections.singletonList(new Requirement("Firemaking", 5)), true),
    FIREMAKING_10("Firemaking 10", 0, Collections.singletonList(new Requirement("Firemaking", 10)), true),
    FIREMAKING_20("Firemaking 20", 0, Collections.singletonList(new Requirement("Firemaking", 20)), true),
    FIREMAKING_30("Firemaking 30", 0, Collections.singletonList(new Requirement("Firemaking", 30)), true),
    FIREMAKING_40("Firemaking 40", 0, Collections.singletonList(new Requirement("Firemaking", 40)), true),
    FIREMAKING_50("Firemaking 50", 0, Collections.singletonList(new Requirement("Firemaking", 50)), true),
    FIREMAKING_60("Firemaking 60", 0, Collections.singletonList(new Requirement("Firemaking", 60)), true),
    FIREMAKING_70("Firemaking 70", 0, Collections.singletonList(new Requirement("Firemaking", 70)), true),
    FIREMAKING_80("Firemaking 80", 0, Collections.singletonList(new Requirement("Firemaking", 80)), true),
    FIREMAKING_90("Firemaking 90", 0, Collections.singletonList(new Requirement("Firemaking", 90)), true),
    FIREMAKING_92("Firemaking 92", 0, Collections.singletonList(new Requirement("Firemaking", 92)), true),
    FIREMAKING_99("Firemaking 99", 0, Collections.singletonList(new Requirement("Firemaking", 99)), true),
	FIRES_ARE_MOSTLY_HARMLESS("Fires are Mostly Harmless", 0, Collections.singletonList(new Requirement("Fairy Tale III post-quest rewards", 2)), true),
    FIRST_RULE_OF_FIGHT_CAVES("First Rule of Fight Caves", 0, Collections.singletonList(new Requirement("TzHaar uniques", 1)), true),
    FISH_FINGERS("Fish Fingers", 0, Arrays.asList(new Requirement("Strength", 35), new Requirement("Fishing", 55),
            new Requirement("Barbarian Fishing Training", 1)), new ArrayList<>(), Arrays.asList(new Reward("Fishing", 80),
            new Reward("Raw tuna", 1)), new ArrayList<>(), true),
    FISHING_BUBBLES("Fishing - Bubbles", 0, Collections.singletonList(new Requirement("Bubbles", 1)), true),
    FISHING_5("Fishing 5", 0, Collections.singletonList(new Requirement("Fishing", 5)), true),
    FISHING_10("Fishing 10", 0, Collections.singletonList(new Requirement("Fishing", 10)), true),
    FISHING_20("Fishing 20", 0, Collections.singletonList(new Requirement("Fishing", 20)), true),
    FISHING_30("Fishing 30", 0, Collections.singletonList(new Requirement("Fishing", 30)), true),
    FISHING_40("Fishing 40", 0, Collections.singletonList(new Requirement("Fishing", 40)), true),
    FISHING_50("Fishing 50", 0, Collections.singletonList(new Requirement("Fishing", 50)), true),
    FISHING_60("Fishing 60", 0, Collections.singletonList(new Requirement("Fishing", 60)), true),
    FISHING_70("Fishing 70", 0, Collections.singletonList(new Requirement("Fishing", 70)), true),
    FISHING_80("Fishing 80", 0, Collections.singletonList(new Requirement("Fishing", 80)), true),
    FISHING_90("Fishing 90", 0, Collections.singletonList(new Requirement("Fishing", 90)), true),
    FISHING_92("Fishing 92", 0, Collections.singletonList(new Requirement("Fishing", 92)), true),
    FISHING_99("Fishing 99", 0, Collections.singletonList(new Requirement("Fishing", 99)), true),
    FIST_CONTACT("Fist Contact", 0, Collections.singletonList(new Requirement("Strength", 70)),
            Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.GENERAL_GRAARDOR)),
					Arrays.asList(new Restriction("Main-hand", 0), new Restriction("Off-hand", 0)))),
			new ArrayList<>(), new ArrayList<>(), true),
    FIVE_STAR_GENERAL("Five-Star General", 0, Collections.singletonList(new Requirement("General Graardor uniques", 18)), true),
    FLETCHING_FLO("Fletching - Flo", 0, Collections.singletonList(new Requirement("Flo", 1)), true),
    FLETCHING_5("Fletching 5", 0, Collections.singletonList(new Requirement("Fletching", 5)), true),
    FLETCHING_10("Fletching 10", 0, Collections.singletonList(new Requirement("Fletching", 10)), true),
    FLETCHING_20("Fletching 20", 0, Collections.singletonList(new Requirement("Fletching", 20)), true),
    FLETCHING_30("Fletching 30", 0, Collections.singletonList(new Requirement("Fletching", 30)), true),
    FLETCHING_40("Fletching 40", 0, Collections.singletonList(new Requirement("Fletching", 40)), true),
    FLETCHING_50("Fletching 50", 0, Collections.singletonList(new Requirement("Fletching", 50)), true),
    FLETCHING_60("Fletching 60", 0, Collections.singletonList(new Requirement("Fletching", 60)), true),
    FLETCHING_70("Fletching 70", 0, Collections.singletonList(new Requirement("Fletching", 70)), true),
    FLETCHING_80("Fletching 80", 0, Collections.singletonList(new Requirement("Fletching", 80)), true),
    FLETCHING_90("Fletching 90", 0, Collections.singletonList(new Requirement("Fletching", 90)), true),
    FLETCHING_92("Fletching 92", 0, Collections.singletonList(new Requirement("Fletching", 92)), true),
    FLETCHING_99("Fletching 99", 0, Collections.singletonList(new Requirement("Fletching", 99)), true),
    FLOOR_IS_LARVAL("Floor is Larval", 0, Collections.singletonList(new Requirement("Summoning", 60)),
            Collections.singletonList(new Encounter(Arrays.asList(Arrays.asList(Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM,
                    Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM),
                    Arrays.asList(Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM,
                    Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM), Arrays.asList(Enemy.GIANT_WORM, Enemy.GIANT_WORM,
                    Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM, Enemy.GIANT_WORM,
                    Enemy.GIANT_WORM, Enemy.GIANT_WORM), Collections.singletonList(Enemy.QUEEN_BLACK_DRAGON)), new ArrayList<>())),
			new ArrayList<>(), new ArrayList<>(), true),
    FOR_THE_LOVE_OF_MABEL("For the Love of Mabel", 0, Collections.singletonList(new Requirement("Love Story post-quest rewards", 1)), true),
    FORCAES_METTLE("Forcae's Mettle", 0, Collections.singletonList(new Requirement("Forcae's journal page", 10)), true),
    FREDS_SHEARINGS("Fred's Shearings", 0, Collections.singletonList(new Requirement("Sheep Shearer", 1)), true),
    FREMENNIK_PROVINCE("Fremennik Province", 0, new ArrayList<>(), true),
    FREMENNIK_SET_TASKS_EASY("Fremennik Set Tasks - Easy", 0, Arrays.asList(new Requirement("Bring the Antipoisons", 1),
            new Requirement("Why Won't You Die?", 1), new Requirement("King Conifer", 1),
            new Requirement("Assaulted Goodies", 1), new Requirement("Oxymoron Incarnate", 1),
            new Requirement("Why Did the Lobster Blush?", 1), new Requirement("Hunting the Hunter", 1),
            new Requirement("Peer of the Pier", 1), new Requirement("A Familiar Feeling", 1),
            new Requirement("Endangered Species", 1)), new ArrayList<>(), new ArrayList<>(),
            Collections.singletonList(new Lamp(Player.ALL_SKILLS, 5000, 30)), true),
    FREMENNIK_SET_TASKS_ELITE("Fremennik Set Tasks - Elite", 0, Arrays.asList(new Requirement("Jaws Breaker", 1),
            new Requirement("Limber Lumber Jumper", 1), new Requirement("Astronomical!", 1),
            new Requirement("First Stryke", 1), new Requirement("Leap of Faith", 1),
            new Requirement("No Smoke Without Pyre", 1), new Requirement("This Hasta Work", 1),
            new Requirement("Potting With Otto", 1), new Requirement("Axe'll Grease", 1)),
            new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Lamp(Player.ALL_SKILLS, 40000, 89), new Lamp(Player.ALL_SKILLS, 30000, 86),
            new Lamp(Player.ALL_SKILLS, 30000, 86), new Lamp(Player.ALL_SKILLS, 30000, 86), new Lamp(Player.ALL_SKILLS, 30000, 86)), true),
    FREMENNIK_SET_TASKS_HARD("Fremennik Set Tasks - Hard", 0, Arrays.asList(new Requirement("Defeating Deadly Dagannoths", 1),
            new Requirement("Dress to Impress", 1), new Requirement("The Graceful Barbarian", 1),
            new Requirement("Runes on the Moon", 1), new Requirement("Pyre At Will", 1),
            new Requirement("Fish Fingers", 1), new Requirement("Easy As Pie", 1),
            new Requirement("How to Maim Your Dragon", 1), new Requirement("A Periodic Table", 1)),
            new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Player.ALL_SKILLS, 15000, 50)), true),
    FREMENNIK_SET_TASKS_MEDIUM("Fremennik Set Tasks - Medium", 0, Arrays.asList(new Requirement("Fremennik History 101", 1),
            new Requirement("Cool Story, Bro", 1), new Requirement("Who's a Good Boy?", 1),
            new Requirement("Only Takes a Little Vial", 1), new Requirement("You Know You Want It!", 1),
            new Requirement("Yak Attack", 1), new Requirement("Fremmental", 1),
            new Requirement("Fairy Mountaneering", 1), new Requirement("You Really Don't Need Any More Shoes", 1),
            new Requirement("Big Game Hunter", 1), new Requirement("Grand Theft Fish", 1)),
            new ArrayList<>(), new ArrayList<>(), Collections.singletonList(new Lamp(Player.ALL_SKILLS, 10000, 40)), true),
    FRIENDLY_NEIGHBOUR("Friendly Neighbour", 0, Collections.singletonList(new Requirement("Araxxor uniques", 15)), new ArrayList(),
            new ArrayList<>(), new ArrayList<>(), true),
    FRIENDS_WITH_MAX("Friends with Max", 0, Arrays.asList(new Requirement("Agility", 99), new Requirement("Attack", 99),
            new Requirement("Strength", 99), new Requirement("Defense", 99), new Requirement("Ranged", 99),
            new Requirement("Prayer", 99), new Requirement("Magic", 99), new Requirement("Constitution", 99),
            new Requirement("Crafting", 99), new Requirement("Mining", 99), new Requirement("Smithing", 99),
            new Requirement("Fishing", 99), new Requirement("Cooking", 99), new Requirement("Firemaking", 99),
            new Requirement("Woodcutting", 99), new Requirement("Runecrafting", 99), new Requirement("Dungeoneering", 99),
            new Requirement("Fletching", 99), new Requirement("Herblore", 99), new Requirement("Thieving", 99),
            new Requirement("Slayer", 99), new Requirement("Farming", 99), new Requirement("Construction", 99),
            new Requirement("Hunter", 99), new Requirement("Summoning", 99), new Requirement("Divination", 99),
            new Requirement("Invention", 99)), true),
    GAME_OVER("Game Over", 0, Collections.singletonList(new Requirement("Gregorovic uniques", 8)), true),
    GENERAL_AWWDOR("General Awwdor", 0, Collections.singletonList(new Requirement("General Awwdor", 1)), true),
    GENERAL_DISASTER_I("General Disaster I", 0, Collections.singletonList(new Requirement("General Graardor (hard)", 5)), true),
    GENERAL_DISASTER_II("General Disaster II", 0, Collections.singletonList(new Requirement("General Graardor (hard)", 10)), true),
    GENERAL_DISASTER_III("General Disaster III", 0, Collections.singletonList(new Requirement("General Graardor (hard)", 25)), true),
    GENERAL_DISASTER_IV("General Disaster IV", 0, Collections.singletonList(new Requirement("General Graardor (hard)", 50)), true),
    GENERAL_DISASTER_V("General Disaster V", 0, Collections.singletonList(new Requirement("General Graardor (hard)", 75)), true),
    GENERAL_DISASTER_VI("General Disaster VI", 0, Collections.singletonList(new Requirement("General Graardor (hard)", 100)), true),
    GENERAL_MAYHEM_I("General Mayhem I", 0, Collections.singletonList(new Requirement("General Graardor", 5)), true),
    GENERAL_MAYHEM_II("General Mayhem II", 0, Collections.singletonList(new Requirement("General Graardor", 10)), true),
    GENERAL_MAYHEM_III("General Mayhem III", 0, Collections.singletonList(new Requirement("General Graardor", 25)), true),
    GENERAL_MAYHEM_IV("General Mayhem IV", 0, Collections.singletonList(new Requirement("General Graardor", 50)), true),
    GENERAL_MAYHEM_V("General Mayhem V", 0, Collections.singletonList(new Requirement("General Graardor", 75)), true),
    GENERAL_MAYHEM_VI("General Mayhem VI", 0, Collections.singletonList(new Requirement("General Graardor", 100)), true),
    GIFT_FROM_SLISKE("Gift from Sliske", 0, Collections.singletonList(new Requirement("Sliske after-quest tasks", 2)), true),
    GLUTTON_FOR_PUNISHMENT("Glutton for Punishment", 0, Arrays.asList(new Requirement("Dreadfowl pouch", 1),
            new Requirement("Thorny snail pouch", 1), new Requirement("Pack pig pouch", 1),
            new Requirement("Evil turnip pouch", 1), new Requirement("War tortoise pouch", 1),
            new Requirement("Fruit bat pouch", 1), new Requirement("Granite lobster pouch", 1),
            new Requirement("Bringing Home the Bacon", 1), new Requirement("Summer's End", 1),
            new Requirement("Summoning", 74)), true),
    GOD_WARS_DUNGEON_TELEPORT("God Wars Dungeon Teleport", 0, Arrays.asList(new Requirement("The Mighty Fall", 1), new Requirement("Law rune", 2),
            new Requirement("Fire rune", 2), new Requirement("Magic", 61)), new ArrayList<>(),
			Collections.singletonList(new Reward("Magic", 68)), new ArrayList<>(), true),
    GOEBIE_RELICS("Goebie Relics", 0, Collections.singletonList(new Requirement("Stone fragments", 5)), true),
    GOING_DOWN_WITH_THE_SHIP("Going Down with the Ship", 0.2, Collections.singletonList(new Requirement("Fishing", 15)), true),
    GOING_FOR_A_PUNT("Going for a Punt", 0, Arrays.asList(new Requirement("Boater", 1), new Requirement("Woodcutting", 57)),
            new ArrayList<>(), Collections.singletonList(new Reward("Woodcutting", 150)), new ArrayList<>(), true),
    GOING_ON_A_SUMMER_HOLIDAY("Going on a Summer Holidat", 0, Collections.singletonList(new Requirement("Coins", 30)), true),
    GONE_FISHING("Gone Fishing", 0, Collections.singletonList(new Requirement("Fishing", 15)), true),
    GONG_MAINTENACE_EXPERT("Gong Maintenance Expert", 0, new ArrayList<>(), Collections.singletonList(new Encounter(Arrays.asList(Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER,
			Enemy.CHARGER), Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER), Arrays.asList(Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER, Enemy.CHARGER),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.CHARGER, Enemy.CHARGER, Enemy.CORMES),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT),
			Arrays.asList(Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT, Enemy.AIRUT),
			Arrays.asList(Enemy.TUZ, Enemy.KRAR, Enemy.BEASTMASTER_DURZAG)), new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
    GOOD_ENOUGH_FOR_A_GOBLIN("Good Enough for a Goblin", 0, Collections.singletonList(new Requirement("Summer's End", 1)),
            Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.CORPOREAL_BEAST)),
					Collections.singletonList(new Restriction("Bronze spear", 1)))), new ArrayList<>(), new ArrayList<>(), true),
    GOT_A_VYRE_REPUTATION("Got a Vyre Reputation", 0, Collections.singletonList(new Requirement("Maximum vyre reputation", 1)), true),
    GRAARDONE("Graardone", 0, Collections.singletonList(new Requirement("Strength", 70)),
            Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.GENERAL_GRAARDOR)),
					Collections.singletonList(new Restriction("Ticks", 25)))), new ArrayList<>(), new ArrayList<>(), true),
	GREAT_GIELINOR_RUN("Great Gielinor Run", 0.25, Arrays.asList(new Requirement("The Branches of Darkmeyer", 1),
			new Requirement("Regicide", 1)), true),
	GREG("Greg", 0, Collections.singletonList(new Requirement("Greg", 1)), true),
	GREGOREY_I("Gregore-Y I", 0, Collections.singletonList(new Requirement("Gregorovic (hard)", 5)), true),
	GREGOREY_II("Gregore-Y II", 0, Collections.singletonList(new Requirement("Gregorovic (hard)", 10)), true),
	GREGOREY_III("Gregore-Y III", 0, Collections.singletonList(new Requirement("Gregorovic (hard)", 25)), true),
	GREGOREY_IV("Gregore-Y IV", 0, Collections.singletonList(new Requirement("Gregorovic (hard)", 50)), true),
	GREGOREY_V("Gregore-Y V", 0, Collections.singletonList(new Requirement("Gregorovic (hard)", 75)), true),
	GREGOREY_VI("Gregore-Y VI", 0, Collections.singletonList(new Requirement("Gregorovic (hard)", 100)), true),
	GREGORGEOUS_I("Gregorgeous I", 0, Collections.singletonList(new Requirement("Gregorovic", 5)), true),
	GREGORGEOUS_II("Gregorgeous II", 0, Collections.singletonList(new Requirement("Gregorovic", 10)), true),
	GREGORGEOUS_III("Gregorgeous III", 0, Collections.singletonList(new Requirement("Gregorovic", 25)), true),
	GREGORGEOUS_IV("Gregorgeous IV", 0, Collections.singletonList(new Requirement("Gregorovic", 50)), true),
	GREGORGEOUS_V("Gregorgeous V", 0, Collections.singletonList(new Requirement("Gregorovic", 75)), true),
	GREGORGEOUS_VI("Gregorgeous VI", 0, Collections.singletonList(new Requirement("Gregorovic", 100)), true),
	GRINDING_MY_GEARS("Grinding My Gears", 0, Arrays.asList(new Requirement("Wheat", 1), new Requirement("Empty pot", 1)),
			new ArrayList<>(), Collections.singletonList(new Reward("Pot of flour", 1)), new ArrayList<>(), true),
    GRONDABANS_LEGACY("Grondaban's legacy", 0, Collections.singletonList(new Requirement("Dishonour among Thieves", 1)), true),
	GUARD_IS_DEAD("Guard is Dead", 0, Collections.singletonList(new Requirement("Dimension of Disaster: Coin of the Realm", 1)),
			Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.NEW_VARROCK_GUARD)), new ArrayList<>())),
			Collections.singletonList(new Reward("Zemomark", 80)), new ArrayList<>(), true),
	GUNNING_FOR_JEWELLERY("Gunning for Jewellery", 0, Collections.singletonList(new Requirement("Dororan's jewellery", 3)), true),
	GUTHAN_BOBBLEHEAD("Guthan Bobblehead", 0, Collections.singletonList(new Requirement("Guthan the Bobbled", 1)), true),
	HAIL_TO_THE_QUEEN("Hail to the Queen", 0, new ArrayList<>(), Collections.singletonList(new Encounter(Arrays.asList(Arrays.asList(Enemy.KALPHITE_GUARDIAN,
			Enemy.KALPHITE_GUARDIAN, Enemy.KALPHITE_QUEEN_PHASE_1), Collections.singletonList(Enemy.KALPHITE_QUEEN_PHASE_2)),
			new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
	HAIL_TO_THE_DUKE_BABY("Hail to the Duke, Baby", 0, new ArrayList<>(), true),
	HAND_EXCHANGE("Hand Exchange", 0, Collections.singletonList(new Requirement("Dimension of Disaster: Coin of the Realm", 1)),
			new ArrayList(), Collections.singletonList(new Reward("Zemomark", 20)), new ArrayList<>(), true),
	HANDICRAFTS("Handicrafts", 0, Arrays.asList(new Requirement("Thread", 1), new Requirement("Leather", 1)),
			new ArrayList<>(), Arrays.asList(new Reward("Crafting", 14), new Reward("Leather gloves", 1)),
			new ArrayList<>(), true),
	HANG_ON_TO_SOMETHING("Hang On to Something", 0, new ArrayList<>(), true),
	HAPPY_HOUR("Happy Hour", 0, Collections.singletonList(new Requirement("Cider", 5)), true),
	HARD_AS_DAEMONS("Hard As Daemons", 0, Collections.singletonList(new Requirement("Hard mode floors", 60)), true),
	HARD_AS_A_ROCK("Hard as a Rock", 0, Collections.singletonList(new Requirement("Vorago uniques", 11)), true),
	HARDLY_A_CHALLENGE_I("Hardly a Challenge I", 0, Collections.singletonList(new Requirement("Har-Aken", 5)), true),
	HARDLY_A_CHALLENGE_II("Hardly a Challenge II", 0, Collections.singletonList(new Requirement("Har-Aken", 10)), true),
	HARDLY_A_CHALLENGE_III("Hardly a Challenge III", 0, Collections.singletonList(new Requirement("Har-Aken", 25)), true),
	HARDLY_A_CHALLENGE_IV("Hardly a Challenge IV", 0, Collections.singletonList(new Requirement("Har-Aken", 50)), true),
	HARDLY_A_CHALLENGE_V("Hardly a Challenge V", 0, Collections.singletonList(new Requirement("Har-Aken", 75)), true),
	HARDLY_A_CHALLENGE_VI("Hardly a Challenge VI", 0, Collections.singletonList(new Requirement("Har-Aken", 100)), true),
	HAUL_COMES_TO_TEMPLETON("Haul Comes to Templeton", 0.05, Collections.singletonList(new Requirement("Dealing with Scabaras", 1)), true),
	HEAL_QUICKLY("Heal, Quickly", 0, Collections.singletonList(new Requirement("Rapid Renewal", 1)), true),
	HEART_TO_HEART("Heart to Heart", 0, Collections.singletonList(new Requirement("Twin Furies uniques", 9)), true),
	HEL_IN_A_HANDBASKET_I("Hel in a Handbasket I", 0, Collections.singletonList(new Requirement("Helwyr (challenge mode)", 5)), true),
	HEL_IN_A_HANDBASKET_II("Hel in a Handbasket II", 0, Collections.singletonList(new Requirement("Helwyr (challenge mode)", 10)), true),
	HEL_IN_A_HANDBASKET_III("Hel in a Handbasket III", 0, Collections.singletonList(new Requirement("Helwyr (challenge mode)", 25)), true),
	HEL_IN_A_HANDBASKET_IV("Hel in a Handbasket IV", 0, Collections.singletonList(new Requirement("Helwyr (challenge mode)", 50)), true),
	HEL_IN_A_HANDBASKET_V("Hel in a Handbasket V", 0, Collections.singletonList(new Requirement("Helwyr (challenge mode)", 75)), true),
	HEL_IN_A_HANDBASKET_VI("Hel in a Handbasket VI", 0, Collections.singletonList(new Requirement("Helwyr (challenge mode)", 100)), true),
	HERBIS_FLAX("Herbi's Flax", 0, Collections.singletonList(new Requirement("Diary of Herbi Flax", 1)), new ArrayList<>(),
			Collections.singletonList(new Reward("Herblore", 335)), new ArrayList<>(), true),
	HERBLORE_HERBERT("Herblore - Herbert", 0, Collections.singletonList(new Requirement("Herbert", 1)), true),
	HERBLORE_5("Herblore 5", 0, Collections.singletonList(new Requirement("Herblore", 5)), true),
	HERBLORE_10("Herblore 10", 0, Collections.singletonList(new Requirement("Herblore", 10)), true),
	HERBLORE_20("Herblore 20", 0, Collections.singletonList(new Requirement("Herblore", 20)), true),
	HERBLORE_30("Herblore 30", 0, Collections.singletonList(new Requirement("Herblore", 30)), true),
	HERBLORE_40("Herblore 40", 0, Collections.singletonList(new Requirement("Herblore", 40)), true),
	HERBLORE_50("Herblore 50", 0, Collections.singletonList(new Requirement("Herblore", 50)), true),
	HERBLORE_60("Herblore 60", 0, Collections.singletonList(new Requirement("Herblore", 60)), true),
	HERBLORE_70("Herblore 70", 0, Collections.singletonList(new Requirement("Herblore", 70)), true),
	HERBLORE_80("Herblore 80", 0, Collections.singletonList(new Requirement("Herblore", 80)), true),
	HERBLORE_90("Herblore 90", 0, Collections.singletonList(new Requirement("Herblore", 90)), true),
	HERBLORE_92("Herblore 92", 0, Collections.singletonList(new Requirement("Herblore", 92)), true),
	HERBLORE_99("Herblore 99", 0, Collections.singletonList(new Requirement("Herblore", 99)), true),
	HERE_WAS_A_SCABARAS_MASK("Here Was a Scabaras Mask", 0.05, Arrays.asList(new Requirement("Diamond in the Rough", 1),
			new Requirement("Mining", 80)), new ArrayList<>(), Arrays.asList(new Reward("Mining", 20000),
			new Reward("Scabaras mask", 1), new Reward("Was", 1)), new ArrayList<>(), true),
	HERE_WE_RAGO_AGAIN_I("Here We Rago Again I", 0, Collections.singletonList(new Requirement("Vorago (hard)", 5)), true),
	HERE_WE_RAGO_AGAIN_II("Here We Rago Again II", 0, Collections.singletonList(new Requirement("Vorago (hard)", 10)), true),
	HERE_WE_RAGO_AGAIN_III("Here We Rago Again III", 0, Collections.singletonList(new Requirement("Vorago (hard)", 25)), true),
	HERE_WE_RAGO_AGAIN_IV("Here We Rago Again IV", 0, Collections.singletonList(new Requirement("Vorago (hard)", 50)), true),
	HERE_WE_RAGO_AGAIN_V("Here We Rago Again V", 0, Collections.singletonList(new Requirement("Vorago (hard)", 75)), true),
	HERE_WE_RAGO_AGAIN_VI("Here We Rago Again VI", 0, Collections.singletonList(new Requirement("Vorago (hard)", 100)), true),
	HERO_OF_THE_GOEBIES("Hero of the Goebies", 0, Arrays.asList(new Requirement("All Together Now", 1),
			new Requirement("Animal Cruelty", 1), new Requirement("Better Not Touch", 1),
			new Requirement("Cormes and Goes", 1), new Requirement("Day at the Aquarium", 1),
			new Requirement("Day at the Pound", 1), new Requirement("Gong Maintenance Expert", 1),
			new Requirement("Make Friends and Influence People", 1), new Requirement("Prison Break", 1),
			new Requirement("Rewind", 1)), true),
	HIDE_AND_SEEK("Hide and Seek", 0, Arrays.asList(new Requirement("Dimension of Disaster: Coin of the Realm", 1),
			new Requirement("Zombie cowhide", 1)), new ArrayList<>(), Arrays.asList(new Reward("Leather", 1),
			new Reward("Zemomark", 20)), new ArrayList<>(), true),
	HISTORY_OF_BILRACH("History of Bilrach", 0, Collections.singletonList(new Requirement("Mysterious chronicle", 30)), true),
	HONESTLY_ITS_NOT_A_PURSE("Honestly, It's Not a Purse", 0, Arrays.asList(new Requirement("Giant pouch", 1),
			new Requirement("Pure essence", 1)), true),
	HOW_MANY_GAMES("How Many Games?", 0, Arrays.asList(new Requirement("Profound helmet", 1),
			new Requirement("Profound chestplate", 1), new Requirement("Profound platelegs", 1),
			new Requirement("Profound sword", 1), new Requirement("Profound shield", 1)), true),
	HOW_TO_SHAME_YOUR_DRAGON("How to Shame Your Dragon", 0, Collections.singletonList(new Requirement("King Black Dragon uniques", 1)), true),
	HUNGRY_HUNGRY_REAVERS("Hungry Hungry Reavers", 0, Collections.singletonList(new Requirement("Frozen key", 1)),
			Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.NEX_ANGEL_OF_DEATH)), new ArrayList<>())),
			new ArrayList<>(), new ArrayList<>(), true),
	HUNTER_ACE("Hunter - Ace", 0, Collections.singletonList(new Requirement("Ace", 1)), true),
	HUNTER_5("Hunter 5", 0, Collections.singletonList(new Requirement("Hunter", 5)), true),
	HUNTER_10("Hunter 10", 0, Collections.singletonList(new Requirement("Hunter", 10)), true),
	HUNTER_20("Hunter 20", 0, Collections.singletonList(new Requirement("Hunter", 20)), true),
	HUNTER_30("Hunter 30", 0, Collections.singletonList(new Requirement("Hunter", 30)), true),
	HUNTER_40("Hunter 40", 0, Collections.singletonList(new Requirement("Hunter", 40)), true),
	HUNTER_50("Hunter 50", 0, Collections.singletonList(new Requirement("Hunter", 50)), true),
	HUNTER_60("Hunter 60", 0, Collections.singletonList(new Requirement("Hunter", 60)), true),
	HUNTER_70("Hunter 70", 0, Collections.singletonList(new Requirement("Hunter", 70)), true),
	HUNTER_80("Hunter 80", 0, Collections.singletonList(new Requirement("Hunter", 80)), true),
	HUNTER_90("Hunter 90", 0, Collections.singletonList(new Requirement("Hunter", 90)), true),
	HUNTER_92("Hunter 92", 0, Collections.singletonList(new Requirement("Hunter", 92)), true),
	HUNTER_99("Hunter 99", 0, Collections.singletonList(new Requirement("Hunter", 99)), true),
	IM_FOREVER_WASHING_SHADOWS("I'm Forever Washing Shadows", 0, Arrays.asList(new Requirement("Blissful shadow core drops", 15),
			new Requirement("Truthful shadow core drops", 15), new Requirement("Manifest shadow core drops", 15)),
			new ArrayList<>(), Collections.singletonList(new Reward("Divination", 50000)), new ArrayList<>(), true),
	I_CAN_SEE_FOR_MILES_AND_MILES("I Can See For Miles and Miles", 0, Collections.singletonList(new Requirement("Beacon keepers with macaws", 12)), true),
	I_DIG_THIS_TRANSPORTATION("I Dig This Transportation", 0, Collections.singletonList(new Requirement("Digsite pendant unlock", 1)), true),
	I_GOT_THIS("I Got This", 0, Collections.singletonList(new Requirement("Slayer", 95)),
			Collections.singletonList(new Encounter(Arrays.asList(Collections.singletonList(Enemy.LEGIO), Collections.singletonList(Enemy.LEGIO),
					Collections.singletonList(Enemy.LEGIO), Collections.singletonList(Enemy.LEGIO), Collections.singletonList(Enemy.LEGIO),
					Collections.singletonList(Enemy.LEGIO)), new ArrayList<>())), new ArrayList<>(), new ArrayList<>(), true),
	I_PRESUME_THESE_REWARDS_ARE_MINE_DEATH("I Presume Thes Rewards Are Mine, Death?", 0,
			Collections.singletonList(new Requirement("Missing, Presumed Death post-quest rewards", 4)), true),
	ICE_ICE_CHIMPY("Ice Ice Chimpy", 0, Collections.singletonList(new Requirement("Chimp ice deliveries", 25)), true),
	ICTHLARINS_LITTLE_CHEST("Icthlarin's Little Chest", 0, Collections.singletonList(new Requirement("Icthlarin's Little Helper", 1)),
			new ArrayList<>(), Collections.singletonList(new Reward("Coins", 50)), new ArrayList<>(), true),
	IMPING_AROUND("Imping Around", 0, Collections.singletonList(new Requirement("Daffyd implings", 16)),
			new ArrayList<>(), Collections.singletonList(new Reward("Hunter", 50000)), new ArrayList<>(), true),
	IMPRESSING_CHAR("Impressing Char", 0, Arrays.asList(new Requirement("The Firemaker's Curse", 1), new Requirement("Firemaking", 91)),
			new ArrayList<>(), Collections.singletonList(new Reward("Firemaking", 7387)), new ArrayList<>(), true),
	IN_THE_SPIRIT_OF_THINGS("In the Spirit of Things", 0, Collections.singletonList(new Requirement("Prayer", 80)),
			Collections.singletonList(new Encounter(Collections.singletonList(Collections.singletonList(Enemy.GREGOROVIC)), new ArrayList<>())),
			new ArrayList<>(), new ArrayList<>(), true),
	INSANE_FINAL_BOSS("Insane Final Boss", 0, Arrays.asList(new Requirement("Final Boss", 1),
			new Requirement("Birdstrike VI", 1), new Requirement("General Disaster", 1),
			new Requirement("Gregore-Y VI", 1), new Requirement("Hel in a Handbasket VI", 1),
			new Requirement("Here We Rago Again VI", 1), new Requirement("Kill K'ril Vol 2 VI", 1),
			new Requirement("More Fast More Furious", 1), new Requirement("Vindictive VI", 1),
			new Requirement("Whack a Mole VI", 1), new Requirement("Zillier Way to Die VI", 1),
			new Requirement("Boss pets", 46)), true),
	INVENTION_MALCOLM("Invention - Malcolm", 0, Collections.singletonList(new Requirement("Malcolm", 1)), true),
	INVENTION_5("Invention 5", 0, Collections.singletonList(new Requirement("Invention", 5)), true),
	INVENTION_10("Invention 10", 0, Collections.singletonList(new Requirement("Invention", 10)), true),
	INVENTION_20("Invention 20", 0, Collections.singletonList(new Requirement("Invention", 20)), true),
	INVENTION_30("Invention 30", 0, Collections.singletonList(new Requirement("Invention", 30)), true),
	INVENTION_40("Invention 40", 0, Collections.singletonList(new Requirement("Invention", 40)), true),
	INVENTION_50("Invention 50", 0, Collections.singletonList(new Requirement("Invention", 50)), true),
	INVENTION_60("Invention 60", 0, Collections.singletonList(new Requirement("Invention", 60)), true),
	INVENTION_70("Invention 70", 0, Collections.singletonList(new Requirement("Invention", 70)), true),
	INVENTION_80("Invention 80", 0, Collections.singletonList(new Requirement("Invention", 80)), true),
	INVENTION_90("Invention 90", 0, Collections.singletonList(new Requirement("Invention", 90)), true),
	INVENTION_99("Invention 99", 0, Collections.singletonList(new Requirement("Invention", 99)), true),
	INVENTION_102("Invention 102", 0, Collections.singletonList(new Requirement("Invention", 102)), true),
	INVENTION_110("Invention 110", 0, Collections.singletonList(new Requirement("Invention", 110)), true),
	INVENTION_120("Invention 120", 0, Collections.singletonList(new Requirement("Invention", 120)), true),
	INVENTION_GIVES_ME_THE_BLUES("Invention Gives Me the Blues", 0, Arrays.asList(new Requirement("Dwarven tech tree items", 8),
			new Requirement("Cave goblin tech tree items", 8)), true),
	ITS_NOT_CALLED_SURGING_TOMBS("It's Not Called Surging Tombs", 0.05, Collections.singletonList(new Requirement("The Jack of Spades", 1)),
			new ArrayList<>(), Collections.singletonList(new Reward("Shifting Tombs", 1)), new ArrayList<>(), true),
	IVAN_IS_FLAILING("Ivan is Flailing", 0, Collections.singletonList(new Requirement("Vyre corpses", 500)), true),
	JACK_OF_ALL_BLADES("Jack of All Blades", 0, Collections.singletonList(new Requirement("Combat skilling pets", 9)), true),
	JACK_OF_ALL_TRADES("Jack of All Trades", 0, Collections.singletonList(new Requirement("Non-combat skilling pets", 18)), true),
	JACK_OF_BLADES("Jack of Blades", 0, Collections.singletonList(new Requirement("Combat skilling pets", 3)), true),
	JACK_OF_TRADES("Jack of Trades", 0, Collections.singletonList(new Requirement("Non-combat skilling pets", 5)), true),
	JACK_OF_THE_CIRCUS("Jack of the Circus", 0, Collections.singletonList(new Requirement("Circus clothing", 26)), true),
	JUST_GIVE_ME_A_SIGN("Just Give Me a Sign", 0, Arrays.asList(new Requirement("Divination", 6), new Requirement("Pale energy", 30),
			new Requirement("Sapphire necklace", 1)), new ArrayList<>(), Arrays.asList(new Reward("Sign of the porter I", 1),
			new Reward("Divination", 2)), new ArrayList<>(), true),

	;
	/* Quests
	COOKS_ASSISTANT("Cook's Assistant", 0.25, new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Reward("Cooking", 300),
			new Reward("Quest Points", 1), new Reward("Coins", 500), new Reward("Sardine", 20)), new ArrayList<>(), true),
	WATERFALL_QUEST("Waterfall Quest", 0.75, Arrays.asList(new Requirement("Air rune", 6), new Requirement("Water rune", 6),
			new Requirement("Earth rune", 6), new Requirement("Rope", 1)), new ArrayList<>(),
			Arrays.asList(new Reward("Quest Points", 1), new Reward("Attack", 13750),
					new Reward("Strength", 13750), new Reward("Gold bar", 2), new Reward("Diamond", 2),
					new Reward("Mithril seeds", 40)), new ArrayList<>(), true),
	CLOCK_TOWER("Clock Tower", 0.25, new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Reward("Quest Points", 1),
			new Reward("Coins", 500)), new ArrayList<>(), true),
	THE_RESTLESS_GHOST("The Restless Ghost", 0.25, new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Reward("Quest Points", 1),
			new Reward("Prayer", 1125)), new ArrayList<>(), true),
	MISSING_PRESUMED_DEATH("Missing, Presumed Death", 1, new ArrayList<>(), Arrays.asList(new Encounter(Arrays.asList(Enemy.WIGHT, Enemy.WIGHT, Enemy.WIGHT,
			Enemy.WIGHT)), new Encounter(Arrays.asList(Enemy.WIGHT_FOOTSOLDIER, Enemy.WIGHT_RANGER, Enemy.WIGHT_RANGER, Enemy.WIGHT_FOOTSOLDIER, Enemy.WIGHT_FOOTSOLDIER,
			Enemy.WIGHT_FOOTSOLDIER, Enemy.WIGHT_FOOTSOLDIER))), Arrays.asList(new Reward("Quest Points", 2),
			new Reward("Prayer", 500), new Reward("Agility", 1000)),
			Collections.singletonList(new Lamp(Arrays.asList("Attack", "Strength", "Defense", "Constitution", "Magic", "Ranged"), 1500)), true),
	MERLINS_CRYSTAL("Merlin's Crystal", 0.75, new ArrayList<>(), Collections.singletonList(new Encounter(Collections.singletonList(Enemy.SIR_MORDRED))),
			Arrays.asList(new Reward("Quest Points", 6), new Reward("Excalibur", 1),
					new Reward("Merlin's Crystal", 1)), new ArrayList<>(), true),
	HOLY_GRAIL("Holy Grail", 0.5, Arrays.asList(new Requirement("Merlin's Crystal", 1), new Requirement("Attack", 30),
			new Requirement("Excalibur", 1)), Collections.singletonList(new Encounter(Collections.singletonList(Enemy.BLACK_KNIGHT_TITAN))),
			Arrays.asList(new Reward("Quest Points", 2), new Reward("Prayer", 11000),
					new Reward("Defense", 15300)), new ArrayList<>(), true),
	PLAGUE_CITY("Plague City", 0.5, Arrays.asList(new Requirement("Dwellberries", 1), new Requirement("Rope", 1),
			new Requirement("Chocolate dust", 1), new Requirement("Snape grass", 1),
			new Requirement("Bucket of milk", 1)), new ArrayList<>(), Arrays.asList(new Reward("Quest Points", 1),
			new Reward("Mining", 2425), new Reward("Plague City", 1)), new ArrayList<>(), true),
	TREE_GNOME_VILLAGE("Tree Gnome Village", 0.75, Collections.singletonList(new Requirement("Logs", 5)),
			Collections.singletonList(new Encounter(Collections.singletonList(Enemy.KHAZARD_WARLORD))), Arrays.asList(new Reward("Attack", 11450),
			new Reward("Quest Points", 2)), new ArrayList<>(), true),
	HAZEEL_CULT("Hazeel Cult", 0.25, new ArrayList<>(), new ArrayList<>(), Arrays.asList(new Reward("Quest Points", 1), new Reward("Thieving", 1500),
			new Reward("Coins", 2005)), new ArrayList<>(), true),
	DRUIDIC_RITUAL("Druidic Ritual", 0.25, Collections.singletonList(new Requirement("Coins", 1)), new ArrayList<>(),
			Arrays.asList(new Reward("Quest Points", 4), new Reward("Herblore", 250), new Reward("Grimy guam", 15),
					new Reward("Eye of newt", 15)), new ArrayList<>(), true),
	RECRUITMENT_DRIVE("Recruitment Drive", 0.75, Collections.singletonList(new Requirement("Herblore", 3)),
			Collections.singletonList(new Encounter(Collections.singletonList(Enemy.SIR_LEYE))), Arrays.asList(new Reward("Quest Points", 1),
			new Reward("Recruitment Drive", 1)), new ArrayList<>(), true),
	RECRUITMENT_DRIVE_PRAYER_LAMP("Recruitment Drive prayer lamp", 0, Arrays.asList(new Requirement("Recruitment Drive", 1), new Requirement("Prayer", 8)),
			new ArrayList<>(), Collections.singletonList(new Reward("Prayer", 1000)), new ArrayList<>(), false),
	RECRUITMENT_DRIVE_HERBLORE_LAMP("Recruitment Drive herblore lamp", 0, Arrays.asList(new Requirement("Recruitment Drive", 1),
			new Requirement("Herblore", 8)), new ArrayList<>(), Collections.singletonList(new Reward("Herblore", 1000)), new ArrayList<>(), false),
	RECRUITMENT_DRIVE_AGILITY_LAMP("Recruitment Drive agility lamp", 0, Arrays.asList(new Requirement("Recruitment Drive", 1),
			new Requirement("Agility", 8)), new ArrayList<>(), Collections.singletonList(new Reward("Agility", 1000)), new ArrayList<>(), false),
	BUY_A_PLAYER_OWNED_HOUSE("Buy a player-owned house", 0, Collections.singletonList(new Requirement("Coins", 1000)),
			new ArrayList(), Collections.singletonList(new Reward("Player-owned house", 1)), new ArrayList<>(), false),
	BUILD_A_PARLOUR("Build a parlour", 0, Arrays.asList(new Requirement("Player-owned house", 1), new Requirement("Coins", 1000)),
			new ArrayList(), Collections.singletonList(new Reward("Parlour", 1)), new ArrayList<>(), false),
	STOLEN_HEARTS("Stolen Hearts", 1, new ArrayList<>(), Collections.singletonList(new Encounter(Arrays.asList(Enemy.SKULLS_MERCENARY, Enemy.SKULLS_MERCENARY, Enemy.SKULLS_MERCENARY))),
			Arrays.asList(new Reward("Quest Points", 3), new Reward("Coins", 2500), new Reward("Constitution", 250),
			new Reward("Agility", 250), new Reward("Thieving", 250), new Reward("Stolen Hearts", 1)),
			Collections.singletonList(new Lamp(Arrays.asList("Attack", "Strength", "Defense", "Magic", "Constitution", "Ranged", "Prayer"), 250)), true),
	DIAMOND_IN_THE_ROUGH("Diamond in the Rough", 1, Collections.singletonList(new Requirement("Stolen Hearts", 1)),
			Arrays.asList(new Encounter(Arrays.asList(Enemy.BANDIT, Enemy.BANDIT, Enemy.BANDIT_KING)), new Encounter(Arrays.asList(Enemy.APEP, Enemy.HERU))),
			Arrays.asList(new Reward("Diamond in the Rough", 1), new Reward("Quest Points", 1), new Reward("Agility", 250),
					new Reward("Thieving", 250), new Reward("Constitution", 250), new Reward("Sapphire", 1),
					new Reward("Emerald", 1), new Reward("Ruby", 1)), Collections.singletonList(new Lamp(Arrays.asList("Attack",
			"Strength", "Defense", "Magic", "Constitution", "Ranged", "Prayer"), 250)), true),
	THE_JACK_OF_SPADES("The Jack of Spades", 0.5, Collections.singletonList(new Requirement("Diamond in the Rough", 1)),
			new ArrayList(), Arrays.asList(new Reward("The Jack of Spades", 1), new Reward("Quest Points", 1),
			new Reward("Agility", 500), new Reward("Construction", 500), new Reward("Dungeoneering", 500),
			new Reward("Thieving", 500)), new ArrayList<>(), true),
	WITCHS_HOUSE("Witch's House", 0.25, new ArrayList<>(), Collections.singletonList(new Encounter(Arrays.asList(Enemy.WITCHS_EXPERIMENT_1,
			Enemy.WITCHS_EXPERIMENT_2, Enemy.WITCHS_EXPERIMENT_3, Enemy.WITCHS_EXPERIMENT_4))), Arrays.asList(new Reward("Quest Points", 4),
			new Reward("Constitution", 6325)), new ArrayList<>(), true),
	RUNE_MYSTERIES("Rune Mysteries", 1, new ArrayList(), new ArrayList(), Arrays.asList(new Reward("Rune Mysteries", 1),
			new Reward("Magic", 250), new Reward("Runecrafting", 250), new Reward("Quest Points", 1),
			new Reward("Tower mindspike", 1), new Reward("First tower hat", 1), new Reward("Air talisman", 1),
			new Reward("Mind rune", 70)), new ArrayList<>(), true),
	GERTRUDES_CAT("Gertrude's Cat", 0.75, Arrays.asList(new Requirement("Raw sardine", 1), new Requirement("Bucket of milk", 1),
			new Requirement("Coins", 100)), new ArrayList<>(), Arrays.asList(new Reward("Quest Points", 1),
			new Reward("Kitten", 1), new Reward("Chocolate cake", 1), new Reward("Stew", 1),
			new Reward("Gertrude's Cat", 1)), new ArrayList<>(), true),
	GERTRUDES_CAT_LAMP("Gertrude's Cat Lamp", 0, Arrays.asList(new Requirement("Gertrude's Cat", 1), new Requirement("Cooking", 14)),
			new ArrayList<>(), Collections.singletonList(new Reward("Cooking", 1525)), new ArrayList<>(), false),;*/

	private String name; //name of the task
	private double time; //est. time taken in hours [not including time to gather items/complete requirements]
	private List<Requirement> reqs; //list of requirements
	private List<Encounter> encounters; //list of combat encounters
	private List<Reward> rewards; //list of static rewards
	private List<Lamp> lamps; //list of lamps
	private boolean display; //if task is a "true" achievement, and should be displayed on the task list
	
	Achievement(String name, double time, List<Requirement> reqs, List<Encounter> encounters, List<Reward> rewards, List<Lamp> lamps, boolean display)
	{
		this.name = name;
		this.time = time;
		this.reqs = reqs;
		this.encounters = encounters;
		this.rewards = rewards;
		this.lamps = lamps;
		this.display = display;
	}

	Achievement(String name, double time, List<Requirement> reqs, boolean display) {
		this.name = name;
		this.time = time;
		this.reqs = reqs;
		this.encounters = new ArrayList<>();
		this.rewards = new ArrayList<>();
		this.lamps = new ArrayList<>();
		this.display = display;
	}

	public GoalResults getTimeForRequirements(Player player) {
		double totalTimeForAllReqs = 0;
		Map<String,Double> totalActionsWithTimesForAllReqs = new HashMap<>();
		List<Requirement> recursiveRequirements = new ArrayList<>();
		Map<String,Double> originalMap = player.getXp().entrySet().stream().collect(Collectors.toMap(e -> e.getKey(), e -> e.getValue()));
		List<Weapon> weaponList = new ArrayList<>(player.getWeapons());
		for (Requirement r : reqs) {
			GoalResults resultsForOneRequirement = r.timeAndActionsToMeetRequirement(player);
			for (Entry<String,Double> actionWithTime : resultsForOneRequirement.getActionsWithTimes().entrySet()) {
				if (Achievement.getAchievementByName(actionWithTime.getKey()) == null || !totalActionsWithTimesForAllReqs.containsKey(actionWithTime.getKey())) {
					totalActionsWithTimesForAllReqs.put(actionWithTime.getKey(), actionWithTime.getValue());
					totalTimeForAllReqs += actionWithTime.getValue();
				}
			}
			recursiveRequirements.addAll(resultsForOneRequirement.getRequirements());
			if (Player.ALL_SKILLS.contains(r.getQualifier())) {
				player.getXp().put(r.getQualifier(), player.getXp().get(r.getQualifier()) + player.getXpToLevel(r.getQualifier(), r.getQuantifier()));
			}
			if (Weapon.getWeaponByName(r.getQualifier()) != null) {
				player.addWeapon(Weapon.getWeaponByName(r.getQualifier()));
			}
		}
		for (Requirement r : recursiveRequirements) {
			if (Player.ALL_SKILLS.contains(r.getQualifier())) {
				player.getXp().put(r.getQualifier(), player.getXp().get(r.getQualifier()) + player.getXpToLevel(r.getQualifier(), r.getQuantifier()));
			}
		}
		for (Encounter e : encounters) {
			CombatResults meleeCombatResults = e.calculateCombat(player,27, "Melee");
			CombatResults rangedCombatResults = e.calculateCombat(player,27, "Ranged");
			CombatResults magicCombatResults = e.calculateCombat(player,27, "Magic");
			if (meleeCombatResults.getHpLost() > 1000000 && rangedCombatResults.getHpLost() > 1000000 && magicCombatResults.getHpLost() > 1000000){
				//System.out.println("Time to update the combat simulator");
				totalTimeForAllReqs += 2147000.0;
			}
		}
		player.setXp(originalMap);
		player.setWeapons(weaponList);
		return new GoalResults(totalTimeForAllReqs, recursiveRequirements, totalActionsWithTimesForAllReqs);
	}

	public double getGainFromRewards(Player player) {
		double totalGainFromAllRewards = 0;
		for (Reward r : rewards) {
			totalGainFromAllRewards += r.getGainFromReward(player);
		}
		for (Lamp lamp : lamps) {
			try {
				totalGainFromAllRewards += lamp.getBestReward(player).getGainFromReward(player);
			}
			catch (NullPointerException e) { //can't access lamp yet
				totalGainFromAllRewards -= 1000000000;
			}
		}
		for (Encounter e : encounters) {
			for (List<Enemy> enemyGroup : e.getEnemyGroups())
				for (Enemy enemy : enemyGroup)
					totalGainFromAllRewards += player.efficientGoalCompletion("Constitution", (int)enemy.getHpxp()).getTotalTime();
					//totalGainFromAllRewards += player.getActionDatabase().bestEffectiveRate("Combat", player);
		}
		return totalGainFromAllRewards;
	}

	public String getName() {
		return name;
	}

	public double getTime() {
		return time;
	}

	public List<Requirement> getReqs() {
		return reqs;
	}

	public List<Reward> getRewards() {
		return rewards;
	}

	public List<Encounter> getEncounters() {
		return encounters;
	}

	public List<Lamp> getLamps() {
		return lamps;
	}

	public boolean isDisplay() {
		return display;
	}

	public static Achievement getAchievementByName(String name) {
		for (Achievement a : values()) {
			if (a.getName().equals(name))
				return a;
		}
		return null;
	}
}